(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{504:function(s,n,t){"use strict";t.r(n);var a=t(33),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("本篇笔记根据")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.bilibili.com/video/av81461839?from=search&seid=8445102345230304010",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("黑马java并发编程教程")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("学习而做的笔记")]),s._v(" "),t("h1",{attrs:{id:"一、基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、基本概念"}},[s._v("#")]),s._v(" 一、基本概念")]),s._v(" "),t("h2",{attrs:{id:"_1、进程与线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、进程与线程"}},[s._v("#")]),s._v(" 1、进程与线程")]),s._v(" "),t("h3",{attrs:{id:"进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[s._v("#")]),s._v(" 进程")]),s._v(" "),t("ul",[t("li",[s._v("程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至 CPU，数据加载至内存。在指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存、管理 IO 的。")]),s._v(" "),t("li",[s._v("当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。")]),s._v(" "),t("li",[s._v("进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）")])]),s._v(" "),t("h3",{attrs:{id:"线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[s._v("#")]),s._v(" 线程")]),s._v(" "),t("ul",[t("li",[s._v("一个进程之内可以分为一到多个线程。")]),s._v(" "),t("li",[s._v("一个线程就是一个指令流，将指令流中的一条条指令以一定的顺序交给 CPU 执行 。")]),s._v(" "),t("li",[s._v("Java 中，线程作为小调度单位，进程作为资源分配的小单位。 在 windows 中进程是不活动的，只是作 为线程的容器")])]),s._v(" "),t("h3",{attrs:{id:"二者对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二者对比"}},[s._v("#")]),s._v(" 二者对比")]),s._v(" "),t("ul",[t("li",[s._v("进程基本上相互独立的，而线程存在于进程内，是进程的一个子集 进程拥有共享的资源，如内存空间等，供其内部的线程共享\n"),t("ul",[t("li",[s._v("进程间通信较为复杂 同一台计算机的进程通信称为 IPC（Inter-process communication）")]),s._v(" "),t("li",[s._v("不同计算机之间的进程通信，需要通过网络，并遵守共同的协议，例如 HTTP")])])]),s._v(" "),t("li",[s._v("线程通信相对简单，因为它们共享进程内的内存，一个例子是多个线程可以访问同一个共享变量 线程更轻量，线程上下文切换成本一般上要比进程上下文切换低")])]),s._v(" "),t("h4",{attrs:{id:"进程和线程的切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程的切换"}},[s._v("#")]),s._v(" 进程和线程的切换")]),s._v(" "),t("p",[t("strong",[s._v("上下文切换")])]),s._v(" "),t("p",[s._v("内核为每一个进程维持一个上下文。**上下文就是内核重新启动一个被抢占的进程所需的状态。**包括以下内容：")]),s._v(" "),t("ul",[t("li",[s._v("通用目的寄存器")]),s._v(" "),t("li",[s._v("浮点寄存器")]),s._v(" "),t("li",[s._v("程序计数器")]),s._v(" "),t("li",[s._v("用户栈")]),s._v(" "),t("li",[s._v("状态寄存器")]),s._v(" "),t("li",[s._v("内核栈")]),s._v(" "),t("li",[s._v("各种内核数据结构：比如描绘地址空间的"),t("strong",[s._v("页表")]),s._v("，包含有关当前进程信息的"),t("strong",[s._v("进程表")]),s._v("，以及包含进程已打开文件的信息的"),t("strong",[s._v("文件表")])])]),s._v(" "),t("p",[t("strong",[s._v("进程切换和线程切换的主要区别")])]),s._v(" "),t("p",[s._v("最主要的一个区别在于"),t("strong",[s._v("进程切换涉及虚拟地址空间的切换而线程不会")]),s._v("。因为每个进程都有自己的虚拟地址空间，而"),t("strong",[s._v("线程是共享所在进程的虚拟地址空间的")]),s._v("，因此同一个进程中的线程进行线程切换时不涉及虚拟地址空间的转换")]),s._v(" "),t("p",[s._v("页表查找是一个很慢的过程，因此通常使用cache来缓存常用的地址映射，这样可以加速页表查找，这个cache就是快表TLB（translation Lookaside Buffer，用来加速页表查找）。由于每个进程都有自己的虚拟地址空间，那么显然每个进程都有自己的页表，那么"),t("strong",[s._v("当进程切换后页表也要进行切换，页表切换后TLB就失效了")]),s._v("，cache失效导致命中率降低，那么虚拟地址转换为物理地址就会变慢，表现出来的就是程序运行会变慢，而线程切换则不会导致TLB失效，因为线程线程无需切换地址空间，因此我们通常说线程切换要比较进程切换快")]),s._v(" "),t("p",[s._v("而且还可能出现"),t("strong",[s._v("缺页中断")]),s._v("，这就需要操作系统将需要的内容调入内存中，若内存已满则还需要将不用的内容调出内存，这也需要花费时间")]),s._v(" "),t("p",[t("strong",[s._v("为什么TLB能加快访问速度")])]),s._v(" "),t("p",[s._v("快表可以避免每次都对页号进行地址的有效性判断。快表中保存了对应的物理块号，可以直接计算出物理地址，无需再进行有效性检查")]),s._v(" "),t("h2",{attrs:{id:"_2、并发与并行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、并发与并行"}},[s._v("#")]),s._v(" 2、并发与并行")]),s._v(" "),t("p",[s._v("并发是一个CPU在不同的时间去不同线程中执行指令。")]),s._v(" "),t("p",[s._v("并行是多个CPU同时处理不同的线程。")]),s._v(" "),t("p",[s._v("引用 Rob Pike 的一段描述：")]),s._v(" "),t("ul",[t("li",[s._v("并发（concurrent）是同一时间"),t("strong",[s._v("应对")]),s._v("（dealing with）多件事情的能力")]),s._v(" "),t("li",[s._v("并行（parallel）是同一时间"),t("strong",[s._v("动手做")]),s._v("（doing）多件事情的能力")])]),s._v(" "),t("h3",{attrs:{id:"_3、应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、应用"}},[s._v("#")]),s._v(" 3、应用")]),s._v(" "),t("h4",{attrs:{id:"应用之异步调用-案例1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用之异步调用-案例1"}},[s._v("#")]),s._v(" 应用之异步调用（案例1）")]),s._v(" "),t("p",[s._v("以调用方角度来讲，如果")]),s._v(" "),t("ul",[t("li",[s._v("需要等待结果返回，才能继续运行就是同步")]),s._v(" "),t("li",[s._v("不需要等待结果返回，就能继续运行就是异步")])]),s._v(" "),t("p",[s._v("\\1) 设计\n多线程可以让方法执行变为异步的（即不要巴巴干等着）比如说读取磁盘文件时，假设读取操作花费了 5 秒钟，如 果没有线程调度机制，这 5 秒 cpu 什么都做不了，其它代码都得暂停…\n\\2) 结论")]),s._v(" "),t("ul",[t("li",[s._v("比如在项目中，视频文件需要转换格式等操作比较费时，这时开一个新线程处理视频转换，避免阻塞主线程")]),s._v(" "),t("li",[s._v("tomcat 的异步 servlet 也是类似的目的，让用户线程处理耗时较长的操作，避免阻塞")]),s._v(" "),t("li",[s._v("tomcat 的工作线程 ui 程序中，开线程进行其他操作，避免阻塞 ui 线程")])]),s._v(" "),t("p",[s._v("结论")]),s._v(" "),t("ol",[t("li",[s._v("单核 cpu 下，多线程不能实际提高程序运行效率，只是为了能够在不同的任务之间切换，不同线程轮流使用 cpu ，不至于一个线程总占用 cpu，别的线程没法干活")]),s._v(" "),t("li",[s._v("多核 cpu 可以并行跑多个线程，但能否提高程序运行效率还是要分情况的\n"),t("ul",[t("li",[s._v("有些任务，经过精心设计，将任务拆分，并行执行，当然可以提高程序的运行效率。但不是所有计算任 务都能拆分（参考后文的【阿姆达尔定律】）")]),s._v(" "),t("li",[s._v("也不是所有任务都需要拆分，任务的目的如果不同，谈拆分和效率没啥意义")])])]),s._v(" "),t("li",[s._v("IO 操作不占用 cpu，只是我们一般拷贝文件使用的是【阻塞 IO】，这时相当于线程虽然不用 cpu，但需要一 直等待 IO 结束，没能充分利用线程。所以才有后面的【非阻塞 IO】和【异步 IO】优化")])]),s._v(" "),t("h1",{attrs:{id:"二、线程的创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、线程的创建"}},[s._v("#")]),s._v(" 二、线程的创建")]),s._v(" "),t("h2",{attrs:{id:"_1、创建一个线程-非主线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、创建一个线程-非主线程"}},[s._v("#")]),s._v(" 1、创建一个线程（非主线程）")]),s._v(" "),t("h3",{attrs:{id:"方法一-通过继承thread创建线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法一-通过继承thread创建线程"}},[s._v("#")]),s._v(" 方法一：通过继承Thread创建线程")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreateThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" myThread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动线程")]),s._v("\n\t\tmyThread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my thread running..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("使用继承方式的好处是，在run（）方法内获取当前线程直接使用this就可以了，无须使用Thread.currentThread（）方法；不好的地方是Java不支持多继承，如果继承了Thread类，那么就不能再继承其他类。另外任务与代码没有分离，当多个线程执行一样的任务时需要多份任务代码")]),s._v(" "),t("h3",{attrs:{id:"方法二-使用runnable配合thread-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法二-使用runnable配合thread-推荐"}},[s._v("#")]),s._v(" 方法二：使用Runnable配合Thread(推荐)")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建线程任务")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Runnable running"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将Runnable对象传给Thread")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启动线程")]),s._v("\n\t\tt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreateThread2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my runnable running..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),s._v(" myRunnable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myRunnable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      thread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("通过实现Runnable接口，并且实现run()方法。在创建线程时作为参数传入该类的实例即可")]),s._v(" "),t("h4",{attrs:{id:"方法二的简化-使用lambda表达式简化操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法二的简化-使用lambda表达式简化操作"}},[s._v("#")]),s._v(" 方法二的简化：使用lambda表达式简化操作")]),s._v(" "),t("p",[t("strong",[s._v("当一个接口带有@FunctionalInterface注解时，是可以使用lambda来简化操作的")])]),s._v(" "),t("p",[s._v("所以方法二中的代码可以被简化为")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test2 {\n\tpublic static void main(String[] args) {\n\t\t//创建线程任务\n\t\tRunnable r = () -> {\n            //直接写方法体即可\n\t\t\tSystem.out.println("Runnable running");\n\t\t\tSystem.out.println("Hello Thread");\n\t\t};\n\t\t//将Runnable对象传给Thread\n\t\tThread t = new Thread(r);\n\t\t//启动线程\n\t\tt.start();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("可以再Runnable上使用Alt+Enter")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144534.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144534.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"原理之-thread-与-runnable-的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理之-thread-与-runnable-的关系"}},[s._v("#")]),s._v(" 原理之 Thread 与 Runnable 的关系")]),s._v(" "),t("p",[s._v("分析 Thread 的源码，理清它与 Runnable 的关系\n"),t("strong",[s._v("小结")])]),s._v(" "),t("ul",[t("li",[s._v("方法1 是把线程和任务合并在了一起")]),s._v(" "),t("li",[s._v("方法2 是把线程和任务分开了")]),s._v(" "),t("li",[s._v("用 Runnable 更容易与线程池等高级 API 配合 用 Runnable 让任务类脱离了 Thread 继承体系，更灵活")])]),s._v(" "),t("h3",{attrs:{id:"方法三-使用futuretask与thread结合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法三-使用futuretask与thread结合"}},[s._v("#")]),s._v(" 方法三：使用FutureTask与Thread结合")]),s._v(" "),t("p",[t("strong",[s._v("使用FutureTask可以用泛型指定线程的返回值类型（Runnable的run方法没有返回值）")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutionException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要传入一个Callable对象")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" task "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Callable")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程执行!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" r1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取线程中方法执行后的返回结果")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("或")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UseFutureTask")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutionException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" futureTask "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCall")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      thread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得线程运行后的返回值")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCall")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Callable")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("继承方式的好处是方便传参")]),s._v("，你可以在子类里面添加成员变量，通过set方法设置参数或者通过构造函数进行传递，而如果使用Runnable方式，则只能使用主线程里面被声明为final的变量。"),t("strong",[s._v("不好的地方是Java不支持多继承")]),s._v("，如果继承了Thread类，那么子类不能再继承其他类，而Runable则没有这个限制。"),t("strong",[s._v("前两种方式都没办法拿到任务的返回结果，但是Futuretask方式可以")])]),s._v(" "),t("h2",{attrs:{id:"_2、原理之线程运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、原理之线程运行"}},[s._v("#")]),s._v(" 2、原理之线程运行")]),s._v(" "),t("h4",{attrs:{id:"栈与栈帧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈与栈帧"}},[s._v("#")]),s._v(" 栈与栈帧")]),s._v(" "),t("p",[s._v("Java Virtual Machine Stacks （Java 虚拟机栈） 我们都知道 JVM 中由堆、栈、方法区所组成，其中栈内存是给谁用的呢？")]),s._v(" "),t("ul",[t("li",[s._v("其实就是线程，每个线程启动后，虚拟机就会为其分配一块"),t("strong",[s._v("栈内存")])]),s._v(" "),t("li",[s._v("每个栈由多个栈帧（Frame）组成，对应着每次"),t("strong",[s._v("方法调用时所占用的内存")])]),s._v(" "),t("li",[s._v("每个线程只能有一个活动栈帧，对应着当前正在执行的那个方法")])]),s._v(" "),t("h4",{attrs:{id:"线程上下文切换-thread-context-switch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程上下文切换-thread-context-switch"}},[s._v("#")]),s._v(" 线程上下文切换（Thread Context Switch）")]),s._v(" "),t("p",[s._v("因为以下一些原因导致 cpu 不再执行当前的线程，转而执行另一个线程的代码")]),s._v(" "),t("ul",[t("li",[s._v("线程的 cpu 时间片用完")]),s._v(" "),t("li",[s._v("垃圾回收 有更高优先级的线程需要运行")]),s._v(" "),t("li",[s._v("线程自己调用了 sleep、yield、wait、join、park、synchronized、lock 等方法")])]),s._v(" "),t("p",[s._v("当 Context Switch 发生时，需要由操作系统保存当前线程的状态，并恢复另一个线程的状态，Java 中对应的概念 就是程序计数器（Program Counter Register），它的作用是记住下一条 jvm 指令的执行地址，是线程私有的")]),s._v(" "),t("ul",[t("li",[s._v("状态包括程序计数器、虚拟机栈中每个栈帧的信息，如局部变量、操作数栈、返回地址等")]),s._v(" "),t("li",[s._v("Context Switch 频繁发生会影响性能")])]),s._v(" "),t("h2",{attrs:{id:"_3、常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、常用方法"}},[s._v("#")]),s._v(" 3、常用方法")]),s._v(" "),t("h3",{attrs:{id:"_1-start-vs-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-start-vs-run"}},[s._v("#")]),s._v(" (1)start() vs run()")]),s._v(" "),t("p",[s._v("被创建的Thread对象直接调用重写的run方法时， run方法是在"),t("strong",[s._v("主线程")]),s._v("中被执行的，而不是在我们所创建的线程中执行。所以如果想要在所创建的线程中执行run方法，"),t("strong",[s._v("需要使用Thread对象的start方法。")])]),s._v(" "),t("h3",{attrs:{id:"_2-sleep-与yield"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-sleep-与yield"}},[s._v("#")]),s._v(" (2)sleep()与yield()")]),s._v(" "),t("h4",{attrs:{id:"sleep-使线程阻塞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sleep-使线程阻塞"}},[s._v("#")]),s._v(" "),t("strong",[s._v("sleep")]),s._v(" (使线程阻塞)")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("调用 sleep 会让当前线程从 "),t("strong",[s._v("Running 进入 Timed Waiting 状态（阻塞）")]),s._v("，可通过state()方法查看")])]),s._v(" "),t("li",[t("p",[s._v("其它线程可以使用 "),t("strong",[s._v("interrupt")]),s._v(" 方法打断正在睡眠的线程，这时 sleep 方法会抛出 InterruptedException")])]),s._v(" "),t("li",[t("p",[s._v("睡眠结束后的线程未必会立刻得到执行")])]),s._v(" "),t("li",[t("p",[s._v("建议用 "),t("strong",[s._v("TimeUnit 的 sleep")]),s._v(" 代替 Thread 的 sleep 来获得更好的可读性 。如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//休眠一秒")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//休眠一分钟")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MINUTES"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])]),s._v(" "),t("h4",{attrs:{id:"yield-让出当前线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yield-让出当前线程"}},[s._v("#")]),s._v(" yield （让出当前线程）")]),s._v(" "),t("ol",[t("li",[s._v("调用 yield 会让当前线程从 "),t("strong",[s._v("Running 进入 Runnable 就绪状态")]),s._v("（仍然有可能被执行），然后调度执行其它线程")]),s._v(" "),t("li",[s._v("具体的实现依赖于操作系统的任务调度器")])]),s._v(" "),t("h4",{attrs:{id:"线程优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程优先级"}},[s._v("#")]),s._v(" 线程优先级")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("线程优先级会提示（hint）调度器优先调度该线程，但它仅仅是一个提示，调度器可以忽略它")])]),s._v(" "),t("li",[t("p",[s._v("如果 cpu 比较忙，那么优先级高的线程会获得更多的时间片，但 cpu 闲时，优先级几乎没作用")])]),s._v(" "),t("li",[t("p",[s._v("设置方法：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("thread1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPriority")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MAX_PRIORITY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置为优先级最高")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-join-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-join-方法"}},[s._v("#")]),s._v(" (3)join()方法")]),s._v(" "),t("p",[s._v("用于等待某个线程结束。哪个线程内调用join()方法，就等待哪个线程结束，然后再去执行其他线程。")]),s._v(" "),t("p",[s._v("如在主线程中调用ti.join()，则是主线程等待t1线程结束")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//等待thread线程执行结束")]),s._v("\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最多等待1000ms,如果1000ms内线程执行完毕，则会直接执行下面的语句，不会等够1000ms")]),s._v("\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_4-interrupt-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-interrupt-方法"}},[s._v("#")]),s._v(" (4)interrupt()方法")]),s._v(" "),t("p",[s._v("用于打断"),t("strong",[s._v("阻塞")]),s._v("(sleep wait join…)的线程。 处于阻塞状态的线程，CPU不会给其分配时间片。")]),s._v(" "),t("ul",[t("li",[s._v("如果一个线程在在运行中被打断，打断标记会被置为true。")]),s._v(" "),t("li",[s._v("如果是打断因sleep wait join方法而被阻塞的线程，会将打断标记置为false")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于查看打断标记，返回值被boolean类型")]),s._v("\nt1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isInterrupted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("正常运行的线程在被打断后，"),t("strong",[s._v("不会停止")]),s._v("，会继续执行。如果要让线程在被打断后停下来，需要"),t("strong",[s._v("使用打断标记来判断")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("while(true) {\n    if(Thread.currentThread().isInterrupted()) {\n        break;\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h5",{attrs:{id:"interrupt方法的应用-两阶段终止模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#interrupt方法的应用-两阶段终止模式"}},[s._v("#")]),s._v(" "),t("strong",[s._v("interrupt方法的应用")]),s._v("——两阶段终止模式")]),s._v(" "),t("p",[s._v("当我们在执行线程一时，想要终止线程二，这是就需要使用interrupt方法来"),t("strong",[s._v("优雅")]),s._v("的停止线程二。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144553.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144553.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("代码")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test7 {\n\tpublic static void main(String[] args) throws InterruptedException {\n\t\tMonitor monitor = new Monitor();\n\t\tmonitor.start();\n\t\tThread.sleep(3500);\n\t\tmonitor.stop();\n\t}\n}\n\nclass Monitor {\n\n\tThread monitor;\n\n\t/**\n\t * 启动监控器线程\n\t */\n\tpublic void start() {\n\t\t//设置线控器线程，用于监控线程状态\n\t\tmonitor = new Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\t//开始不停的监控\n\t\t\t\twhile (true) {\n                    //判断当前线程是否被打断了\n\t\t\t\t\tif(Thread.currentThread().isInterrupted()) {\n\t\t\t\t\t\tSystem.out.println("处理后续任务");\n                        //终止线程执行\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println("监控器运行中...");\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//线程休眠\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t//如果是在休眠的时候被打断，不会将打断标记设置为true，这时要重新设置打断标记\n\t\t\t\t\t\tThread.currentThread().interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmonitor.start();\n\t}\n\n\t/**\n\t * \t用于停止监控器线程\n\t */\n\tpublic void stop() {\n\t\t//打断线程\n\t\tmonitor.interrupt();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br")])]),t("h3",{attrs:{id:"_5-不推荐使用的打断方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-不推荐使用的打断方法"}},[s._v("#")]),s._v(" (5)不推荐使用的打断方法")]),s._v(" "),t("ul",[t("li",[s._v("stop方法 停止线程运行（可能造成共享资源无法被释放，其他线程无法使用这些共享资源）")]),s._v(" "),t("li",[s._v("suspend（暂停线程）/resume（恢复线程）方法")])]),s._v(" "),t("h3",{attrs:{id:"_6-守护线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-守护线程"}},[s._v("#")]),s._v(" (6)守护线程")]),s._v(" "),t("p",[s._v("当JAVA进程中有多个线程在执行时，只有当所有非守护线程都执行完毕后，JAVA进程才会结束。"),t("strong",[s._v("但当非守护线程全部执行完毕后，守护线程无论是否执行完毕，也会一同结束。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将线程设置为守护线程, 默认为false")]),s._v("\nmonitor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDaemon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("守护线程的应用")])]),s._v(" "),t("ul",[t("li",[s._v("垃圾回收器线程就是一种守护线程")]),s._v(" "),t("li",[s._v("Tomcat 中的 Acceptor 和 Poller 线程都是守护线程，所以 Tomcat 接收到 shutdown 命令后，不会等 待它们处理完当前请求")])]),s._v(" "),t("h2",{attrs:{id:"_4、线程的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、线程的状态"}},[s._v("#")]),s._v(" 4、线程的状态")]),s._v(" "),t("h3",{attrs:{id:"_1-五种状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-五种状态"}},[s._v("#")]),s._v(" (1)五种状态")]),s._v(" "),t("p",[s._v("这是从 "),t("strong",[s._v("操作系统")]),s._v(" 层面来描述的")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144606.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144606.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("【初始状态】仅是在语言层面创建了线程对象，还未与操作系统线程关联（例如线程调用了start方法）")]),s._v(" "),t("li",[s._v("【可运行状态】（就绪状态）指该线程已经被创建（与操作系统线程关联），可以由 CPU 调度执行")]),s._v(" "),t("li",[s._v("【运行状态】指获取了 CPU 时间片运行中的状态\n"),t("ul",[t("li",[s._v("当 CPU 时间片用完，会从【运行状态】转换至【可运行状态】，会导致线程的上下文切换")])])]),s._v(" "),t("li",[s._v("【阻塞状态】\n"),t("ul",[t("li",[s._v("如果调用了阻塞 API，如 BIO 读写文件，这时该线程实际不会用到 CPU，会导致线程上下文切换，进入 【阻塞状态】")]),s._v(" "),t("li",[s._v("等 BIO 操作完毕，会由操作系统唤醒阻塞的线程，转换至【可运行状态】")]),s._v(" "),t("li",[s._v("与【可运行状态】的区别是，对【阻塞状态】的线程来说只要它们一直不唤醒，调度器就一直不会考虑调度它们")])])]),s._v(" "),t("li",[s._v("【终止状态】表示线程已经执行完毕，生命周期已经结束，不会再转换为其它状态")])]),s._v(" "),t("h3",{attrs:{id:"_2-六种状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-六种状态"}},[s._v("#")]),s._v(" (2)六种状态")]),s._v(" "),t("p",[s._v("这是从 "),t("strong",[s._v("Java API")]),s._v(" 层面来描述的\n根据 Thread.State 枚举，分为六种状态")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144621.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144621.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("NEW")]),s._v(" 线程刚被创建，但是还没有调用 start() 方法")]),s._v(" "),t("li",[t("strong",[s._v("RUNNABLE")]),s._v(" 当调用了 start() 方法之后，注意，Java API 层面的 RUNNABLE 状态涵盖了操作系统层面的 【可运行状态】、【运行状态】和【阻塞状态】（由于 BIO 导致的线程阻塞，在 Java 里无法区分，仍然认为 是可运行）")]),s._v(" "),t("li",[t("strong",[s._v("BLOCKED ， WAITING ， TIMED_WAITING")]),s._v(" 都是 "),t("strong",[s._v("Java API 层面")]),s._v("对【阻塞状态】的细分，如sleep就位TIMED_WAITING， join为WAITING状态。后面会在状态转换一节详述。")]),s._v(" "),t("li",[t("strong",[s._v("TERMINATED")]),s._v(" 当线程代码运行结束")])]),s._v(" "),t("h1",{attrs:{id:"三、共享模型之管程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、共享模型之管程"}},[s._v("#")]),s._v(" 三、共享模型之管程")]),s._v(" "),t("h2",{attrs:{id:"_1、共享带来的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、共享带来的问题"}},[s._v("#")]),s._v(" 1、共享带来的问题")]),s._v(" "),t("h3",{attrs:{id:"_1-临界区-critical-section"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-临界区-critical-section"}},[s._v("#")]),s._v(" (1)临界区 Critical Section")]),s._v(" "),t("ul",[t("li",[s._v("一个程序运行多个线程本身是没有问题的")]),s._v(" "),t("li",[s._v("问题出在多个线程访问共享资源\n"),t("ul",[t("li",[s._v("多个线程读共享资源其实也没有问题")]),s._v(" "),t("li",[s._v("在多个线程对共享资源读写操作时发生指令交错，就会出现问题")])])]),s._v(" "),t("li",[s._v("一段代码块内如果存在对共享资源的多线程读写操作，称这段代码块为"),t("strong",[s._v("临界区")]),s._v("\n例如，下面代码中的临界区")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("static int counter = 0;\n \nstatic void increment() \n// 临界区 \n{   \n    counter++; \n}\n \nstatic void decrement() \n// 临界区 \n{ \n    counter--; \n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"_2-竞态条件-race-condition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-竞态条件-race-condition"}},[s._v("#")]),s._v(" "),t("strong",[s._v("(2)竞态条件 Race Condition")])]),s._v(" "),t("p",[s._v("多个线程在"),t("strong",[s._v("临界区")]),s._v("内执行，由于代码的执行序列不同而导致结果无法预测，称之为发生了"),t("strong",[s._v("竞态条件")])]),s._v(" "),t("h2",{attrs:{id:"_2、synchronized-解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、synchronized-解决方案"}},[s._v("#")]),s._v(" 2、synchronized 解决方案")]),s._v(" "),t("h3",{attrs:{id:"_1-解决手段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-解决手段"}},[s._v("#")]),s._v(" (1)解决手段")]),s._v(" "),t("p",[s._v("为了避免临界区的竞态条件发生，有多种手段可以达到目的。")]),s._v(" "),t("ul",[t("li",[s._v("阻塞式的解决方案：synchronized，Lock")]),s._v(" "),t("li",[s._v("非阻塞式的解决方案：原子变量")])]),s._v(" "),t("p",[s._v("本次课使用阻塞式的解决方案："),t("strong",[s._v("synchronized")]),s._v("，来解决上述问题，即俗称的**【对象锁】**，它采用互斥的方式让同一 时刻至多只有一个线程能持有【对象锁】，其它线程再想获取这个【对象锁】时就会阻塞住(blocked)。这样就能保证拥有锁 的线程可以安全的执行临界区内的代码，不用担心线程上下文切换")]),s._v(" "),t("h3",{attrs:{id:"_2-synchronized语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-synchronized语法"}},[s._v("#")]),s._v(" (2)synchronized语法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("synchronized(对象) {\n\t//临界区\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("例：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('static int counter = 0; \n//创建一个公共对象，作为对象锁的对象\nstatic final Object room = new Object();\n \npublic static void main(String[] args) throws InterruptedException {    \n\tThread t1 = new Thread(() -> {        \n    for (int i = 0; i < 5000; i++) {            \n        synchronized (room) {     \n        counter++;            \n       \t }       \n \t   }    \n    }, "t1");\n \n    Thread t2 = new Thread(() -> {       \n        for (int i = 0; i < 5000; i++) {         \n            synchronized (room) {            \n            counter--;          \n            }    \n        } \n    }, "t2");\n \n    t1.start();    \n    t2.start(); \n    t1.join();   \n    t2.join();    \n    log.debug("{}",counter); \n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"_3-synchronized加在方法上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-synchronized加在方法上"}},[s._v("#")]),s._v(" (3)synchronized加在方法上")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("加在成员方法上")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class Demo {\n\t//在方法上加上synchronized关键字\n\tpublic synchronized void test() {\n\t\n\t}\n\t//等价于\n\tpublic void test() {\n\t\tsynchronized(this) {\n\t\t\n\t\t}\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("加在静态方法上")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class Demo {\n\t//在静态方法上加上synchronized关键字\n\tpublic synchronized static void test() {\n\t\n\t}\n\t//等价于\n\tpublic void test() {\n\t\tsynchronized(Demo.class) {\n\t\t\n\t\t}\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_3、变量的线程安全分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量的线程安全分析"}},[s._v("#")]),s._v(" 3、变量的线程安全分析")]),s._v(" "),t("h4",{attrs:{id:"成员变量和静态变量是否线程安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#成员变量和静态变量是否线程安全"}},[s._v("#")]),s._v(" 成员变量和静态变量是否线程安全？")]),s._v(" "),t("ul",[t("li",[s._v("如果它们没有共享，则线程安全")]),s._v(" "),t("li",[s._v("如果它们被共享了，根据它们的状态是否能够改变，又分两种情况\n"),t("ul",[t("li",[s._v("如果只有读操作，则线程安全")]),s._v(" "),t("li",[s._v("如果有读写操作，则这段代码是临界区，需要考虑线程安全")])])])]),s._v(" "),t("h4",{attrs:{id:"局部变量是否线程安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部变量是否线程安全"}},[s._v("#")]),s._v(" 局部变量是否线程安全？")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("局部变量是线程安全的")])]),s._v(" "),t("li",[t("p",[s._v("但局部变量引用的对象则未必 （要看该对象")]),s._v(" "),t("p",[s._v("是否被共享")]),s._v(" "),t("p",[s._v("且被执行了读写操作）")]),s._v(" "),t("ul",[t("li",[s._v("如果该对象没有逃离方法的作用范围，它是线程安全的")]),s._v(" "),t("li",[s._v("如果该对象逃离方法的作用范围，需要考虑线程安全")])])]),s._v(" "),t("li",[t("p",[s._v("局部变量是线程安全的——每个方法都在对应线程的栈中创建栈帧，不会被其他线程共享")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144636.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144636.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("如果调用的对象被共享，且执行了读写操作，则"),t("strong",[s._v("线程不安全")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144649.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144649.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("如果是局部变量，则会在堆中创建对应的对象，不会存在线程安全问题。")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144702.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144702.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"常见线程安全类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见线程安全类"}},[s._v("#")]),s._v(" 常见线程安全类")]),s._v(" "),t("ul",[t("li",[s._v("String")]),s._v(" "),t("li",[s._v("Integer")]),s._v(" "),t("li",[s._v("StringBuﬀer")]),s._v(" "),t("li",[s._v("Random")]),s._v(" "),t("li",[s._v("Vector （List的线程安全实现类）")]),s._v(" "),t("li",[s._v("Hashtable （Hash的线程安全实现类）")]),s._v(" "),t("li",[s._v("java.util.concurrent 包下的类")])]),s._v(" "),t("p",[s._v("这里说它们是线程安全的是指，多个线程调用它们"),t("strong",[s._v("同一个实例的某个方法时")]),s._v("，是线程安全的")]),s._v(" "),t("ul",[t("li",[s._v("它们的每个方法是原子的（都被加上了synchronized）")]),s._v(" "),t("li",[s._v("但注意它们"),t("strong",[s._v("多个方法的组合不是原子的")]),s._v("，所以可能会出现线程安全问题")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144903.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144903.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"不可变类线程安全性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不可变类线程安全性"}},[s._v("#")]),s._v(" 不可变类线程安全性")]),s._v(" "),t("p",[s._v("String、Integer 等都是"),t("strong",[s._v("不可变类")]),s._v("，因为其内部的状态不可以改变，因此它们的方法都是线程安全的")]),s._v(" "),t("p",[s._v("有同学或许有疑问，String 有 replace，substring 等方法【可以】改变值啊，那么这些方法又是如何保证线程安 全的呢？")]),s._v(" "),t("p",[s._v("这是因为这些方法的返回值都"),t("strong",[s._v("创建了一个新的对象")]),s._v("，而不是直接改变String、Integer对象本身。")]),s._v(" "),t("h2",{attrs:{id:"_4、monitor概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、monitor概念"}},[s._v("#")]),s._v(" 4、Monitor概念")]),s._v(" "),t("h3",{attrs:{id:"_1-原理之monitor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理之monitor"}},[s._v("#")]),s._v(" (1)原理之Monitor")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144917.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144917.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[s._v("当线程执行到临界区代码时，如果使用了synchronized，会先查询synchronized中所指定的对象(obj)"),t("strong",[s._v("是否绑定了Monitor")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果"),t("strong",[s._v("没有绑定")]),s._v("，则会先去去与Monitor绑定，并且将Owner设为当前线程。")])]),s._v(" "),t("li",[t("p",[s._v("如果")]),s._v(" "),t("p",[s._v("已经绑定")]),s._v(" "),t("p",[s._v("，则会去查询该Monitor是否已经有了Owner")]),s._v(" "),t("ul",[t("li",[s._v("如果没有，则Owner与将当前线程绑定")]),s._v(" "),t("li",[s._v("如果有，则放入EntryList，进入阻塞状态(blocked)")])])])])]),s._v(" "),t("li",[t("p",[s._v("当Monitor的Owner将临界区中代码执行完毕后，Owner便会被清空，此时EntryList中处于"),t("strong",[s._v("阻塞")]),s._v("状态的线程会被"),t("strong",[s._v("叫醒并竞争")]),s._v("，此时的竞争是"),t("strong",[s._v("非公平的")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("注意")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("对象在使用了synchronized后与Monitor绑定时，会将对象头中的"),t("strong",[s._v("Mark Word")]),s._v("置为Monitor指针。")]),s._v(" "),t("li",[s._v("每个对象都会绑定一个"),t("strong",[s._v("唯一的Monitor")]),s._v("，如果synchronized中所指定的对象(obj)"),t("strong",[s._v("不同")]),s._v("，则会绑定"),t("strong",[s._v("不同")]),s._v("的Monitor")])])])]),s._v(" "),t("h2",{attrs:{id:"_5、synchronized原理进阶"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、synchronized原理进阶"}},[s._v("#")]),s._v(" 5、Synchronized原理进阶")]),s._v(" "),t("h3",{attrs:{id:"对象头格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象头格式"}},[s._v("#")]),s._v(" 对象头格式")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144926.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144926.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_1-轻量级锁-用于优化monitor这类的重量级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-轻量级锁-用于优化monitor这类的重量级锁"}},[s._v("#")]),s._v(" (1)轻量级锁（用于优化Monitor这类的重量级锁）")]),s._v(" "),t("p",[t("strong",[s._v("轻量级锁使用场景："),t("strong",[s._v("当一个对象被多个线程所访问，但访问的时间是")]),s._v("错开的（不存在竞争）")]),s._v("，此时就可以使用"),t("strong",[s._v("轻量级锁")]),s._v("来优化。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建"),t("strong",[s._v("锁记录")]),s._v("（Lock Record）对象，每个线程的栈帧都会包含一个锁记录对象，内部可以存储锁定对象的mark word（不再一开始就使用Monitor）")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144942.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144942.png",alt:"img"}}),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("让锁记录中的Object reference指向锁对象（Object），并尝试用cas去替换Object中的mark word，将此mark word放入lock record中保存")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144950.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144950.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("如果cas替换成功，则将Object的对象头替换为"),t("strong",[s._v("锁记录的地址")]),s._v("和"),t("strong",[s._v("状态 00（轻量级锁状态）")]),s._v("，并由该线程给对象加锁")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144957.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608144957.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_2-锁膨胀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-锁膨胀"}},[s._v("#")]),s._v(" (2)锁膨胀")]),s._v(" "),t("ul",[t("li",[s._v("如果一个线程在给一个对象加轻量级锁时，"),t("strong",[s._v("cas替换操作失败")]),s._v("（因为此时其他线程已经给对象加了轻量级锁），此时该线程就会进入"),t("strong",[s._v("锁膨胀")]),s._v("过程")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145004.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145004.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[s._v("此时便会给对象加上重量级锁（使用Monitor）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("将对象头的Mark Word改为Monitor的地址，并且状态改为01(重量级锁)")])]),s._v(" "),t("li",[t("p",[s._v("并且该线程放入入EntryList中，并进入阻塞状态(blocked)")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145148.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145148.png",alt:"img"}}),t("OutboundLink")],1)])])])])]),s._v(" "),t("h3",{attrs:{id:"_3-自旋优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-自旋优化"}},[s._v("#")]),s._v(" (3)自旋优化")]),s._v(" "),t("p",[t("strong",[s._v("重量级锁")]),s._v("竞争时，还可以使用自选来优化，如果当前线程在"),t("strong",[s._v("自旋成功")]),s._v("（使用锁的线程退出了同步块，"),t("strong",[s._v("释放了锁")]),s._v("），这时就可以避免线程进入阻塞状态。")]),s._v(" "),t("ul",[t("li",[s._v("第一种情况")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145136.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145136.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("第二种情况")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145125.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145125.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_4-偏向锁-用于优化轻量级锁重入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-偏向锁-用于优化轻量级锁重入"}},[s._v("#")]),s._v(" (4)偏向锁(用于优化轻量级锁重入)")]),s._v(" "),t("p",[s._v("轻量级锁在没有竞争时，每次"),t("strong",[s._v("重入")]),s._v("（该线程执行的方法中再次锁住该对象）操作仍需要cas替换操作，这样是会使性能降低的。")]),s._v(" "),t("p",[s._v("所以引入了"),t("strong",[s._v("偏向锁")]),s._v("对性能进行优化：在"),t("strong",[s._v("第一次")]),s._v("cas时会将"),t("strong",[s._v("线程的ID")]),s._v("写入对象的Mark Word中。此后发现这个线程ID就是自己的，就表示没有竞争，就不需要再次cas，以后只要不发生竞争，这个对象就归该线程所有。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145109.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145109.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"偏向状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#偏向状态"}},[s._v("#")]),s._v(" 偏向状态")]),s._v(" "),t("ul",[t("li",[s._v("Normal：一般状态，没有加任何锁，前面62位保存的是对象的信息，"),t("strong",[s._v("最后2位为状态（01），倒数第三位表示是否使用偏向锁（未使用：0）")])]),s._v(" "),t("li",[s._v("Biased：偏向状态，使用偏向锁，前面54位保存的当前线程的ID，"),t("strong",[s._v("最后2位为状态（01），倒数第三位表示是否使用偏向锁（使用：1）")])]),s._v(" "),t("li",[s._v("Lightweight：使用轻量级锁，前62位保存的是锁记录的指针，"),t("strong",[s._v("最后两位为状态（00）")])]),s._v(" "),t("li",[s._v("Heavyweight：使用重量级锁，前62位保存的是Monitor的地址指针，"),t("strong",[s._v("后两位为状态(10)")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145101.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145101.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("如果开启了偏向锁（默认开启），在创建对象时，对象的Mark Word后三位应该是101")]),s._v(" "),t("li",[s._v("但是偏向锁默认是"),t("strong",[s._v("有延迟")]),s._v("的，不会再程序一启动就生效，而是会在程序运行一段时间（几秒之后），才会对创建的对象设置为偏向状态")]),s._v(" "),t("li",[s._v("如果没有开启偏向锁，对象的Mark Word后三位应该是001")])]),s._v(" "),t("h4",{attrs:{id:"撤销偏向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#撤销偏向"}},[s._v("#")]),s._v(" 撤销偏向")]),s._v(" "),t("p",[s._v("以下几种情况会使对象的偏向锁失效")]),s._v(" "),t("ul",[t("li",[s._v("调用对象的hashCode方法")]),s._v(" "),t("li",[s._v("多个线程使用该对象")]),s._v(" "),t("li",[t("strong",[s._v("调用了wait/notify方法")]),s._v("（调用wait方法会导致锁膨胀而使用"),t("strong",[s._v("重量级锁")]),s._v("）")])]),s._v(" "),t("h3",{attrs:{id:"_5-批量重偏向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-批量重偏向"}},[s._v("#")]),s._v(" (5)批量重偏向")]),s._v(" "),t("ul",[t("li",[s._v("如果对象虽然被多个线程访问，但是线程间不存在竞争，这时偏向T1的对象仍有机会重新偏向T2\n"),t("ul",[t("li",[s._v("重偏向会重置Thread ID")])])]),s._v(" "),t("li",[s._v("当撤销超过20次后（超过阈值），JVM会觉得是不是偏向错了，这时会在给对象加锁时，重新偏向至加锁线程。")])]),s._v(" "),t("h3",{attrs:{id:"_6-批量撤销"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-批量撤销"}},[s._v("#")]),s._v(" (6)批量撤销")]),s._v(" "),t("p",[s._v("当撤销偏向锁的阈值超过40以后，就会将"),t("strong",[s._v("整个类的对象都改为不可偏向的")])]),s._v(" "),t("h2",{attrs:{id:"_6、wait-notify"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、wait-notify"}},[s._v("#")]),s._v(" 6、Wait/Notify")]),s._v(" "),t("h3",{attrs:{id:"_1-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[s._v("#")]),s._v(" (1)原理")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145204.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145204.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[s._v("锁对象调用wait方法（obj.wait），就会使当前线程进入WaitSet中，变为WAITING状态。")])]),s._v(" "),t("li",[t("p",[s._v("处于BLOCKED和WAITING状态的线程都为")]),s._v(" "),t("p",[s._v("阻塞")]),s._v(" "),t("p",[s._v("状态，CPU都不会分给他们时间片。但是有所区别：")]),s._v(" "),t("ul",[t("li",[s._v("BLOCKED状态的线程是在竞争对象时，发现Monitor的Owner已经是别的线程了，此时就会进入EntryList中，并处于BLOCKED状态")]),s._v(" "),t("li",[s._v("WAITING状态的线程是获得了对象的锁，但是自身因为某些原因需要进入阻塞状态时，锁对象调用了wait方法而进入了WaitSet中，处于WAITING状态")])])]),s._v(" "),t("li",[t("p",[s._v("BLOCKED状态的线程会在锁被释放的时候被唤醒，但是处于WAITING状态的线程只有被锁对象调用了notify方法(obj.notify/obj.notifyAll)，才会被唤醒。")])])]),s._v(" "),t("p",[t("strong",[s._v("注：只有当对象被锁以后，才能调用wait和notify方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class Test1 {\n\tfinal static Object LOCK = new Object();\n\tpublic static void main(String[] args) throws InterruptedException {\n        //只有在对象被锁住后才能调用wait方法\n\t\tsynchronized (LOCK) {\n\t\t\tLOCK.wait();\n\t\t}\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"_2-wait与sleep的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-wait与sleep的区别"}},[s._v("#")]),s._v(" (2)Wait与Sleep的区别")]),s._v(" "),t("p",[t("strong",[s._v("不同点")])]),s._v(" "),t("ul",[t("li",[s._v("Sleep是Thread类的静态方法，Wait是Object的方法，Object又是所有类的父类，所以所有类都有Wait方法。")]),s._v(" "),t("li",[s._v("Sleep在阻塞的时候不会释放锁，而Wait在阻塞的时候会释放锁")]),s._v(" "),t("li",[s._v("Sleep不需要与synchronized一起使用，而Wait需要与synchronized一起使用（对象被锁以后才能使用）")])]),s._v(" "),t("p",[t("strong",[s._v("相同点")])]),s._v(" "),t("ul",[t("li",[s._v("阻塞状态都为"),t("strong",[s._v("TIMED_WAITING")])])]),s._v(" "),t("h3",{attrs:{id:"_3-优雅地使用wait-notify"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-优雅地使用wait-notify"}},[s._v("#")]),s._v(" (3)优雅地使用wait/notify")]),s._v(" "),t("p",[t("strong",[s._v("什么时候适合使用wait")])]),s._v(" "),t("ul",[t("li",[s._v("当线程"),t("strong",[s._v("不满足某些条件")]),s._v("，需要暂停运行时，可以使用wait。这样会将"),t("strong",[s._v("对象的锁释放")]),s._v("，让其他线程能够继续运行。如果此时使用sleep，会导致所有线程都进入阻塞，导致所有线程都没法运行，直到当前线程sleep结束后，运行完毕，才能得到执行。")])]),s._v(" "),t("p",[t("strong",[s._v("使用wait/notify需要注意什么")])]),s._v(" "),t("ul",[t("li",[s._v("当有"),t("strong",[s._v("多个")]),s._v("线程在运行时，对象调用了wait方法，此时这些线程都会进入WaitSet中等待。如果这时使用了"),t("strong",[s._v("notify")]),s._v("方法，可能会造成"),t("strong",[s._v("虚假唤醒")]),s._v("（唤醒的不是满足条件的等待线程），这时就需要使用"),t("strong",[s._v("notifyAll")]),s._v("方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("synchronized (LOCK) {\n\twhile(//不满足条件，一直等待，避免虚假唤醒) {\n\t\tLOCK.wait();\n\t}\n\t//满足条件后再运行\n}\n\nsynchronized (LOCK) {\n\t//唤醒所有等待线程\n\tLOCK.notifyAll();\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"_7、模式之保护性暂停"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、模式之保护性暂停"}},[s._v("#")]),s._v(" 7、模式之保护性暂停")]),s._v(" "),t("h3",{attrs:{id:"_1-定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[s._v("#")]),s._v(" (1)定义")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145223.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145223.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_2-举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-举例"}},[s._v("#")]),s._v(" (2)举例")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test2 {\n\tpublic static void main(String[] args) {\n\t\tString hello = "hello thread!";\n\t\tGuarded guarded = new Guarded();\n\t\tnew Thread(()->{\n\t\t\tSystem.out.println("想要得到结果");\n\t\t\tsynchronized (guarded) {\n\t\t\t\tSystem.out.println("结果是："+guarded.getResponse());\n\t\t\t}\n\t\t\tSystem.out.println("得到结果");\n\t\t}).start();\n\n\t\tnew Thread(()->{\n\t\t\tSystem.out.println("设置结果");\n\t\t\tsynchronized (guarded) {\n\t\t\t\tguarded.setResponse(hello);\n\t\t\t}\n\t\t}).start();\n\t}\n}\n\nclass Guarded {\n\t/**\n\t * 要返回的结果\n\t */\n\tprivate Object response;\n\t\n    //优雅地使用wait/notify\n\tpublic Object getResponse() {\n\t\t//如果返回结果为空就一直等待，避免虚假唤醒\n\t\twhile(response == null) {\n\t\t\tsynchronized (this) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.wait();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn response;\n\t}\n\n\tpublic void setResponse(Object response) {\n\t\tthis.response = response;\n\t\tsynchronized (this) {\n\t\t\t//唤醒休眠的线程\n\t\t\tthis.notifyAll();\n\t\t}\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn "Guarded{" +\n\t\t\t\t"response=" + response +\n\t\t\t\t\'}\';\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("p",[t("strong",[s._v("带超时判断的暂停")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public Object getResponse(long time) {\n\t\tsynchronized (this) {\n\t\t\t//获取开始时间\n\t\t\tlong currentTime = System.currentTimeMillis();\n\t\t\t//用于保存已经等待了的时间\n\t\t\tlong passedTime = 0;\n\t\t\twhile(response == null) {\n\t\t\t\t//看经过的时间-开始时间是否超过了指定时间\n\t\t\t\tlong waitTime = time -passedTime;\n\t\t\t\tif(waitTime <= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttry {\n                   \t//等待剩余时间\n\t\t\t\t\tthis.wait(waitTime);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\t//获取当前时间\n\t\t\t\tpassedTime = System.currentTimeMillis()-currentTime\t\t\n            }\n\t\t}\n\t\treturn response;\n\t}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"_3-join源码-使用保护性暂停模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-join源码-使用保护性暂停模式"}},[s._v("#")]),s._v(" (3)join源码——使用保护性暂停模式")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public final synchronized void join(long millis)\n    throws InterruptedException {\n        long base = System.currentTimeMillis();\n        long now = 0;\n\n        if (millis < 0) {\n            throw new IllegalArgumentException("timeout value is negative");\n        }\n\n        if (millis == 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            while (isAlive()) {\n                long delay = millis - now;\n                if (delay <= 0) {\n                    break;\n                }\n                wait(delay);\n                now = System.currentTimeMillis() - base;\n            }\n        }\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h2",{attrs:{id:"_8、park-unpark"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、park-unpark"}},[s._v("#")]),s._v(" 8、park/unpark")]),s._v(" "),t("h3",{attrs:{id:"_1-基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本使用"}},[s._v("#")]),s._v(" (1)基本使用")]),s._v(" "),t("p",[t("strong",[s._v("park/unpark都是LockSupport类中的的方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('//暂停线程运行\nLockSupport.park;\n\n//恢复线程运行\nLockSupport.unpark(thread);\npublic static void main(String[] args) throws InterruptedException {\n\t\tThread thread = new Thread(()-> {\n\t\t\tSystem.out.println("park");\n            //暂停线程运行\n\t\t\tLockSupport.park();\n\t\t\tSystem.out.println("resume");\n\t\t}, "t1");\n\t\tthread.start();\n\n\t\tThread.sleep(1000);\n\t\tSystem.out.println("unpark");\n    \t//恢复线程运行\n\t\tLockSupport.unpark(thread);\n\t}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"_2-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-特点"}},[s._v("#")]),s._v(" (2)特点")]),s._v(" "),t("p",[t("strong",[s._v("与wait/notify的区别")])]),s._v(" "),t("ul",[t("li",[s._v("wait，notify 和 notifyAll 必须配合"),t("strong",[s._v("Object Monitor")]),s._v("一起使用，而park，unpark不必")]),s._v(" "),t("li",[s._v("park ，unpark 是以"),t("strong",[s._v("线程为单位")]),s._v("来"),t("strong",[s._v("阻塞")]),s._v("和"),t("strong",[s._v("唤醒")]),s._v("线程，而 notify 只能随机唤醒一个等待线程，notifyAll 是唤醒所有等待线程，就不那么精确")]),s._v(" "),t("li",[s._v("park & unpark 可以"),t("strong",[s._v("先 unpark")]),s._v("，而 wait & notify 不能先 notify")]),s._v(" "),t("li",[t("strong",[s._v("park不会释放锁")]),s._v("，而wait会释放锁")])]),s._v(" "),t("h3",{attrs:{id:"_3-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-原理"}},[s._v("#")]),s._v(" (3)原理")]),s._v(" "),t("p",[s._v("每个线程都有一个自己的"),t("strong",[s._v("Park对象")]),s._v("，并且该对象**_counter, _cond,__mutex**组成")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("先调用park再调用unpark时")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("先调用park")]),s._v(" "),t("ul",[t("li",[s._v("线程运行时，会将Park对象中的**_counter的值设为0**；")]),s._v(" "),t("li",[s._v("调用park时，会先查看counter的值是否为0，如果为0，则将线程放入阻塞队列cond中")]),s._v(" "),t("li",[s._v("放入阻塞队列中后，会"),t("strong",[s._v("再次")]),s._v("将counter设置为0")])])]),s._v(" "),t("li",[t("p",[s._v("然后调用unpark")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("调用unpark方法后，会将counter的值设置为1")])]),s._v(" "),t("li",[t("p",[s._v("去唤醒阻塞队列cond中的线程")])]),s._v(" "),t("li",[t("p",[s._v("线程继续运行并将counter的值设为0")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145250.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145250.png",alt:"img"}}),t("OutboundLink")],1)])])])])])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145303.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145303.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("先调用unpark，再调用park\n"),t("ul",[t("li",[s._v("调用unpark\n"),t("ul",[t("li",[s._v("会将counter设置为1（运行时0）")])])]),s._v(" "),t("li",[s._v("调用park方法\n"),t("ul",[t("li",[s._v("查看counter是否为0")]),s._v(" "),t("li",[s._v("因为unpark已经把counter设置为1，所以此时将counter设置为0，但"),t("strong",[s._v("不放入")]),s._v("阻塞队列cond中")])])])])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145313.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145313.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_9、线程中的状态转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、线程中的状态转换"}},[s._v("#")]),s._v(" 9、线程中的状态转换")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145330.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145330.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"情况一-new-runnable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况一-new-runnable"}},[s._v("#")]),s._v(" 情况一：NEW –> RUNNABLE")]),s._v(" "),t("ul",[t("li",[s._v("当调用了t.start()方法时，由 NEW –> RUNNABLE")])]),s._v(" "),t("h3",{attrs:{id:"情况二-runnable-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况二-runnable-waiting"}},[s._v("#")]),s._v(" 情况二： RUNNABLE <–> WAITING")]),s._v(" "),t("ul",[t("li",[s._v("当调用了t 线程用 synchronized(obj) 获取了对象锁后\n"),t("ul",[t("li",[s._v("调用 obj.wait() 方法时，t 线程从 RUNNABLE –> WAITING")]),s._v(" "),t("li",[s._v("调用 obj.notify() ， obj.notifyAll() ， t.interrupt() 时\n"),t("ul",[t("li",[s._v("竞争锁成功，t 线程从 WAITING –> RUNNABLE")]),s._v(" "),t("li",[s._v("竞争锁失败，t 线程从 WAITING –> BLOCKED")])])])])])]),s._v(" "),t("h3",{attrs:{id:"情况三-runnable-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况三-runnable-waiting"}},[s._v("#")]),s._v(" 情况三：RUNNABLE <–> WAITING")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("当前线程")]),s._v(" "),t("p",[s._v("调用 t.join() 方法时，当前线程从 RUNNABLE –> WAITING")]),s._v(" "),t("ul",[t("li",[s._v("注意是"),t("strong",[s._v("当前线程")]),s._v("在t 线程对象的监视器上等待")])])]),s._v(" "),t("li",[t("p",[s._v("t 线程"),t("strong",[s._v("运行结束")]),s._v("，或调用了"),t("strong",[s._v("当前线程")]),s._v("的 interrupt() 时，当前线程从 WAITING –> RUNNABLE")])])]),s._v(" "),t("h3",{attrs:{id:"情况四-runnable-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况四-runnable-waiting"}},[s._v("#")]),s._v(" 情况四： RUNNABLE <–> WAITING")]),s._v(" "),t("ul",[t("li",[s._v("当前线程调用 LockSupport.park() 方法会让当前线程从 RUNNABLE –> WAITING")]),s._v(" "),t("li",[s._v("调用 LockSupport.unpark(目标线程) 或调用了线程 的 interrupt() ，会让目标线程从 WAITING –> RUNNABLE")])]),s._v(" "),t("h3",{attrs:{id:"情况五-runnable-timed-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况五-runnable-timed-waiting"}},[s._v("#")]),s._v(" 情况五： RUNNABLE <–> TIMED_WAITING")]),s._v(" "),t("p",[s._v("t 线程用 synchronized(obj) 获取了对象锁后")]),s._v(" "),t("ul",[t("li",[s._v("调用 obj.wait("),t("strong",[s._v("long n")]),s._v(") 方法时，t 线程从 RUNNABLE –> TIMED_WAITING")]),s._v(" "),t("li",[s._v("t 线程等待时间超过了 n 毫秒，或调用 obj.notify() ， obj.notifyAll() ， t.interrupt() 时\n"),t("ul",[t("li",[s._v("竞争锁成功，t 线程从 TIMED_WAITING –> RUNNABLE")]),s._v(" "),t("li",[s._v("竞争锁失败，t 线程从 TIMED_WAITING –> BLOCKED")])])])]),s._v(" "),t("h3",{attrs:{id:"情况六-runnable-timed-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况六-runnable-timed-waiting"}},[s._v("#")]),s._v(" 情况六：RUNNABLE <–> TIMED_WAITING")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("当前线程调用 t.join")]),s._v(" "),t("p",[s._v("(long n")]),s._v(" "),t("p",[s._v(") 方法时，当前线程从 RUNNABLE –> TIMED_WAITING")]),s._v(" "),t("ul",[t("li",[s._v("注意是当前线程在t 线程对象的监视器上等待")])])]),s._v(" "),t("li",[t("p",[s._v("当前线程等待时间超过了 n 毫秒，或t 线程运行结束，或调用了当前线程的 interrupt() 时，当前线程从 TIMED_WAITING –> RUNNABLE")])])]),s._v(" "),t("h3",{attrs:{id:"情况七-runnable-timed-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况七-runnable-timed-waiting"}},[s._v("#")]),s._v(" 情况七：RUNNABLE <–> TIMED_WAITING")]),s._v(" "),t("ul",[t("li",[s._v("当前线程调用 Thread.sleep(long n) ，当前线程从 RUNNABLE –> TIMED_WAITING")]),s._v(" "),t("li",[s._v("当前线程等待时间超过了 n 毫秒，当前线程从 TIMED_WAITING –> RUNNABLE")])]),s._v(" "),t("h3",{attrs:{id:"情况八-runnable-timed-waiting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况八-runnable-timed-waiting"}},[s._v("#")]),s._v(" 情况八：RUNNABLE <–> TIMED_WAITING")]),s._v(" "),t("ul",[t("li",[s._v("当前线程调用 LockSupport.parkNanos(long nanos) 或 LockSupport.parkUntil(long millis) 时，当前线 程从 RUNNABLE –> TIMED_WAITING")]),s._v(" "),t("li",[s._v("调用 LockSupport.unpark(目标线程) 或调用了线程 的 interrupt() ，或是等待超时，会让目标线程从 TIMED_WAITING–> RUNNABLE")])]),s._v(" "),t("h3",{attrs:{id:"情况九-runnable-blocked"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况九-runnable-blocked"}},[s._v("#")]),s._v(" 情况九：RUNNABLE <–> BLOCKED")]),s._v(" "),t("ul",[t("li",[s._v("t 线程用 synchronized(obj) 获取了对象锁时如果"),t("strong",[s._v("竞争失败")]),s._v("，从 RUNNABLE –> BLOCKED")]),s._v(" "),t("li",[s._v("持 obj 锁线程的同步代码块执行完毕，会唤醒该对象上所有 BLOCKED 的线程重新竞争，如果其中 t 线程竞争 成功，从 BLOCKED –> RUNNABLE ，其它"),t("strong",[s._v("失败")]),s._v("的线程仍然 BLOCKED")])]),s._v(" "),t("h3",{attrs:{id:"情况十-runnable-terminated"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情况十-runnable-terminated"}},[s._v("#")]),s._v(" 情况十： RUNNABLE <–> TERMINATED")]),s._v(" "),t("p",[s._v("当前线"),t("strong",[s._v("程所有代码运行完毕")]),s._v("，进入 TERMINATED")]),s._v(" "),t("h2",{attrs:{id:"_10、多把锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、多把锁"}},[s._v("#")]),s._v(" 10、多把锁")]),s._v(" "),t("p",[t("strong",[s._v("将锁的粒度细分")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("class BigRoom {\n    //额外创建对象来作为锁\n\tprivate final Object studyRoom = new Object();\n\tprivate final Object bedRoom = new Object();\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_11、活跃性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11、活跃性"}},[s._v("#")]),s._v(" 11、活跃性")]),s._v(" "),t("h3",{attrs:{id:"_1-定义-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义-2"}},[s._v("#")]),s._v(" (1)定义")]),s._v(" "),t("p",[s._v("因为某种原因，使得代码一直无法执行完毕，这样的现象叫做活跃性")]),s._v(" "),t("h3",{attrs:{id:"_2-死锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-死锁"}},[s._v("#")]),s._v(" (2)死锁")]),s._v(" "),t("p",[s._v("有这样的情况：一个线程需要"),t("strong",[s._v("同时获取多把锁")]),s._v("，这时就容易发生死锁")]),s._v(" "),t("p",[s._v("如：t1线程获得A对象 锁，接下来想获取B对象的锁t2线程获得B对象锁，接下来想获取A对象的锁")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public static void main(String[] args) {\n\t\tfinal Object A = new Object();\n\t\tfinal Object B = new Object();\n\t\tnew Thread(()->{\n\t\t\tsynchronized (A) {\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tsynchronized (B) {\n\n\t\t\t\t}\n\t\t\t}\n\t\t}).start();\n\n\t\tnew Thread(()->{\n\t\t\tsynchronized (B) {\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tsynchronized (A) {\n\n\t\t\t\t}\n\t\t\t}\n\t\t}).start();\n\t}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("h4",{attrs:{id:"发生死锁的必要条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发生死锁的必要条件"}},[s._v("#")]),s._v(" 发生死锁的必要条件")]),s._v(" "),t("ul",[t("li",[s._v("互斥条件\n"),t("ul",[t("li",[s._v("在一段时间内，一种资源只能被一个进程所使用")])])]),s._v(" "),t("li",[s._v("请求和保持条件\n"),t("ul",[t("li",[s._v("进程已经拥有了至少一种资源，同时又去申请其他资源。因为其他资源被别的进程所使用，该进程进入阻塞状态，并且不释放自己已有的资源")])])]),s._v(" "),t("li",[s._v("不可抢占条件\n"),t("ul",[t("li",[s._v("进程对已获得的资源在未使用完成前不能被强占，只能在进程使用完后自己释放")])])]),s._v(" "),t("li",[s._v("循环等待条件\n"),t("ul",[t("li",[s._v("发生死锁时，必然存在一个进程——资源的循环链。")])])])]),s._v(" "),t("h4",{attrs:{id:"定位死锁的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定位死锁的方法"}},[s._v("#")]),s._v(" 定位死锁的方法")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("jps+jstack ThreadID")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在JAVA控制台中的Terminal中输入"),t("strong",[s._v("jps")]),s._v("指令可以查看运行中的线程ID，使用"),t("strong",[s._v("jstack ThreadID")]),s._v("可以查看线程状态。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145351.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145351.png",alt:"img"}}),t("OutboundLink")],1)])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("F:\\Thread_study>jps\n20672 RemoteMavenServer36\n22880 Jps\n4432 Launcher\n5316 Test5\n20184 KotlinCompileDaemon\n11132\n\nF:\\Thread_study>jstack 5316\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("打印的结果")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('//找到一个java级别的死锁\nFound one Java-level deadlock:\n=============================\n"Thread-1":\n  waiting to lock monitor 0x0000000017f40de8 (object 0x00000000d6188880, a java.lang.Object),\n  which is held by "Thread-0"\n"Thread-0":\n  waiting to lock monitor 0x0000000017f43678 (object 0x00000000d6188890, a java.lang.Object),\n  which is held by "Thread-1"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("jconsole检测死锁")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145405.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145405.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145416.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145416.png",alt:"img"}}),t("OutboundLink")],1)])])]),s._v(" "),t("h4",{attrs:{id:"哲学家就餐问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哲学家就餐问题"}},[s._v("#")]),s._v(" 哲学家就餐问题")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145436.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145436.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"避免死锁的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#避免死锁的方法"}},[s._v("#")]),s._v(" 避免死锁的方法")]),s._v(" "),t("p",[s._v("在线程使用锁对象时**，顺序加锁**即可避免死锁")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145450.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145450.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_3-活锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-活锁"}},[s._v("#")]),s._v(" (3)活锁")]),s._v(" "),t("p",[s._v("活锁出现在两个线程"),t("strong",[s._v("互相改变对方的结束条件")]),s._v("，后谁也无法结束。")]),s._v(" "),t("h4",{attrs:{id:"避免活锁的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#避免活锁的方法"}},[s._v("#")]),s._v(" 避免活锁的方法")]),s._v(" "),t("p",[s._v("在线程执行时，中途给予"),t("strong",[s._v("不同的间隔时间")]),s._v("即可。")]),s._v(" "),t("h4",{attrs:{id:"死锁与活锁的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#死锁与活锁的区别"}},[s._v("#")]),s._v(" 死锁与活锁的区别")]),s._v(" "),t("ul",[t("li",[s._v("死锁是因为线程互相持有对象想要的锁，并且都不释放，最后到时"),t("strong",[s._v("线程阻塞")]),s._v("，"),t("strong",[s._v("停止运行")]),s._v("的现象。")]),s._v(" "),t("li",[s._v("活锁是因为线程间修改了对方的结束条件，而导致代码"),t("strong",[s._v("一直在运行")]),s._v("，却一直"),t("strong",[s._v("运行不完")]),s._v("的现象。")])]),s._v(" "),t("h3",{attrs:{id:"_4-饥饿"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-饥饿"}},[s._v("#")]),s._v(" (4)饥饿")]),s._v(" "),t("p",[s._v("某些线程因为优先级太低，导致一直无法获得资源的现象。")]),s._v(" "),t("p",[s._v("在使用顺序加锁时，可能会出现饥饿现象")]),s._v(" "),t("h2",{attrs:{id:"_12、reentrantlock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12、reentrantlock"}},[s._v("#")]),s._v(" 12、ReentrantLock")]),s._v(" "),t("p",[t("strong",[s._v("和synchronized相比具有的的特点")])]),s._v(" "),t("ul",[t("li",[s._v("可中断")]),s._v(" "),t("li",[s._v("可以设置超时时间")]),s._v(" "),t("li",[s._v("可以设置为公平锁 (先到先得)")]),s._v(" "),t("li",[s._v("支持多个条件变量( 具有"),t("strong",[s._v("多个")]),s._v("waitset)")])]),s._v(" "),t("p",[t("strong",[s._v("基本语法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//获取ReentrantLock对象\nprivate ReentrantLock lock = new ReentrantLock();\n//加锁\nlock.lock();\ntry {\n\t//需要执行的代码\n}finally {\n\t//释放锁\n\tlock.unlock();\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h4",{attrs:{id:"可重入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可重入"}},[s._v("#")]),s._v(" 可重入")]),s._v(" "),t("ul",[t("li",[s._v("可重入是指同一个线程如果首次获得了这把锁，那么因为它是这把锁的拥有者，因此有权利再次获取这把锁")]),s._v(" "),t("li",[s._v("如果是不可重入锁，那么第二次获得锁时，自己也会被锁挡住")])]),s._v(" "),t("h4",{attrs:{id:"可打断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可打断"}},[s._v("#")]),s._v(" 可打断")]),s._v(" "),t("p",[s._v("如果某个线程处于阻塞状态，可以调用其interrupt方法让其停止阻塞，获得锁失败")]),s._v(" "),t("p",[t("strong",[s._v("简而言之")]),s._v("就是：处于阻塞状态的线程，被打断了就不用阻塞了，直接停止运行")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public static void main(String[] args) {\n\t\tReentrantLock lock = new ReentrantLock();\n\t\tThread t1 = new Thread(()-> {\n\t\t\ttry {\n\t\t\t\t//加锁，可打断锁\n\t\t\t\tlock.lockInterruptibly();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n                //被打断，返回，不再向下执行\n\t\t\t\treturn;\n\t\t\t}finally {\n\t\t\t\t//释放锁\n\t\t\t\tlock.unlock();\n\t\t\t}\n\n\t\t});\n\n\t\tlock.lock();\n\t\ttry {\n\t\t\tt1.start();\n\t\t\tThread.sleep(1000);\n\t\t\t//打断\n\t\t\tt1.interrupt();\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\t}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("h4",{attrs:{id:"锁超时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁超时"}},[s._v("#")]),s._v(" 锁超时")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("lock.tryLock")]),s._v("方法会返回获取锁是否成功。如果成功则返回true，反之则返回false。")]),s._v(" "),t("p",[s._v("并且tryLock方法可以"),t("strong",[s._v("指定等待时间")]),s._v("，参数为：tryLock(long timeout, TimeUnit unit), 其中timeout为最长等待时间，TimeUnit为时间单位")]),s._v(" "),t("p",[t("strong",[s._v("简而言之")]),s._v("就是：获取失败了、获取超时了或者被打断了，不再阻塞，直接停止运行")]),s._v(" "),t("p",[s._v("不设置等待时间")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public static void main(String[] args) {\n\t\tReentrantLock lock = new ReentrantLock();\n\t\tThread t1 = new Thread(()-> {\n            //未设置等待时间，一旦获取失败，直接返回false\n\t\t\tif(!lock.tryLock()) {\n\t\t\t\tSystem.out.println("获取失败");\n                //获取失败，不再向下执行，返回\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tSystem.out.println("得到了锁");\n\t\t\tlock.unlock();\n\t\t});\n\n\n\t\tlock.lock();\n\t\ttry{\n\t\t\tt1.start();\n\t\t\tThread.sleep(3000);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\t}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("设置等待时间")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public static void main(String[] args) {\n\t\tReentrantLock lock = new ReentrantLock();\n\t\tThread t1 = new Thread(()-> {\n\t\t\ttry {\n\t\t\t\t//判断获取锁是否成功，最多等待1秒\n\t\t\t\tif(!lock.tryLock(1, TimeUnit.SECONDS)) {\n\t\t\t\t\tSystem.out.println("获取失败");\n\t\t\t\t\t//获取失败，不再向下执行，直接返回\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\t//被打断，不再向下执行，直接返回\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tSystem.out.println("得到了锁");\n\t\t\t//释放锁\n\t\t\tlock.unlock();\n\t\t});\n\n\n\t\tlock.lock();\n\t\ttry{\n\t\t\tt1.start();\n\t\t\t//打断等待\n\t\t\tt1.interrupt();\n\t\t\tThread.sleep(3000);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\t}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h4",{attrs:{id:"公平锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公平锁"}},[s._v("#")]),s._v(" 公平锁")]),s._v(" "),t("p",[s._v("在线程获取锁失败，进入阻塞队列时，"),t("strong",[s._v("先进入")]),s._v("的会在锁被释放后"),t("strong",[s._v("先获得")]),s._v("锁。这样的获取方式就是"),t("strong",[s._v("公平")]),s._v("的。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//默认是不公平锁，需要在创建时指定为公平锁\nReentrantLock lock = new ReentrantLock(true);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"条件变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件变量"}},[s._v("#")]),s._v(" 条件变量")]),s._v(" "),t("p",[s._v("synchronized 中也有条件变量，就是我们讲原理时那个 waitSet 休息室，当条件不满足时进入waitSet 等待")]),s._v(" "),t("p",[s._v("ReentrantLock 的条件变量比 synchronized 强大之处在于，它是支持"),t("strong",[s._v("多个")]),s._v("条件变量的，这就好比")]),s._v(" "),t("ul",[t("li",[s._v("synchronized 是那些不满足条件的线程都在一间休息室等消息")]),s._v(" "),t("li",[s._v("而 ReentrantLock 支持多间休息室，有专门等烟的休息室、专门等早餐的休息室、唤醒时也是按休息室来唤 醒")])]),s._v(" "),t("p",[s._v("使用要点：")]),s._v(" "),t("ul",[t("li",[s._v("await 前需要"),t("strong",[s._v("获得锁")])]),s._v(" "),t("li",[s._v("await 执行后，会释放锁，进入 conditionObject 等待")]),s._v(" "),t("li",[s._v("await 的线程被唤醒（或打断、或超时）取重新竞争 lock 锁")]),s._v(" "),t("li",[s._v("竞争 lock 锁成功后，从 await 后继续执")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('static Boolean judge = false;\npublic static void main(String[] args) throws InterruptedException {\n\tReentrantLock lock = new ReentrantLock();\n\t//获得条件变量\n\tCondition condition = lock.newCondition();\n\tnew Thread(()->{\n\t\tlock.lock();\n\t\ttry{\n\t\t\twhile(!judge) {\n\t\t\t\tSystem.out.println("不满足条件，等待...");\n\t\t\t\t//等待\n\t\t\t\tcondition.await();\n\t\t\t}\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tSystem.out.println("执行完毕！");\n\t\t\tlock.unlock();\n\t\t}\n\t}).start();\n\n\tnew Thread(()->{\n\t\tlock.lock();\n\t\ttry {\n\t\t\tThread.sleep(1);\n\t\t\tjudge = true;\n\t\t\t//释放\n\t\t\tcondition.signal();\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\n\t}).start();\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br")])]),t("h4",{attrs:{id:"通过lock与aqs实现可重入锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过lock与aqs实现可重入锁"}},[s._v("#")]),s._v(" 通过Lock与AQS实现可重入锁")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class MyLock implements Lock {\n   private static class Sync extends AbstractQueuedSynchronizer {\n      @Override\n      protected boolean tryAcquire(int arg) {\n         if (getExclusiveOwnerThread() == null) {\n            if (compareAndSetState(0, 1)) {\n               setExclusiveOwnerThread(Thread.currentThread());\n               return true;\n            }\n            return false;\n         }\n\n         if (getExclusiveOwnerThread() == Thread.currentThread()) {\n            int state = getState();\n            compareAndSetState(state, state + 1);\n            return true;\n         }\n\n         return false;\n      }\n\n      @Override\n      protected boolean tryRelease(int arg) {\n         if (getState() <= 0) {\n            throw new IllegalMonitorStateException();\n         }\n\n         if (getExclusiveOwnerThread() != Thread.currentThread()) {\n            throw new IllegalMonitorStateException();\n         }\n\n         int state = getState();\n         if (state == 1) {\n            setExclusiveOwnerThread(null);\n            compareAndSetState(state, 0);\n         } else {\n            compareAndSetState(state, state - 1);\n         }\n         return true;\n      }\n\n      @Override\n      protected boolean isHeldExclusively() {\n         return getState() >= 1;\n      }\n\n      public Condition newCondition() {\n         return new ConditionObject();\n      }\n\n   }\n\n   Sync sync = new Sync();\n\n   @Override\n   public void lock() {\n      sync.acquire(1);\n   }\n\n   @Override\n   public void lockInterruptibly() throws InterruptedException {\n      sync.acquireInterruptibly(1);\n   }\n\n   @Override\n   public boolean tryLock() {\n      return sync.tryAcquire(1);\n   }\n\n   @Override\n   public boolean tryLock(long time, TimeUnit unit) throws InterruptedException {\n      return sync.tryAcquireNanos(1, time);\n   }\n\n   @Override\n   public void unlock() {\n      sync.release(1);\n   }\n\n   @Override\n   public Condition newCondition() {\n      return sync.newCondition();\n   }\n}\n\nclass Main {\n   static int num = 0;\n   public static void main(String[] args) throws InterruptedException, IOException {\n      MyLock lock = new MyLock();\n\n      Object syncLock = new Object();\n\n      Thread t1 = new Thread(() -> {\n         for (int i = 0; i < 10000; i++) {\n            lock.lock();\n            try {\n               lock.lock();\n               try {\n                  lock.lock();\n                  try {\n                     num++;\n                  } finally {\n                     lock.unlock();\n                  }\n               } finally {\n                  lock.unlock();\n               }\n            } finally {\n               lock.unlock();\n            }\n         }\n      });\n\n      Thread t2 = new Thread(() -> {\n         for (int i = 0; i < 10000; i++) {\n            lock.lock();\n            try {\n               lock.lock();\n               try {\n                  lock.lock();\n                  try {\n                     num--;\n                  } finally {\n                     lock.unlock();\n                  }\n               } finally {\n                  lock.unlock();\n               }\n            } finally {\n               lock.unlock();\n            }\n         }\n      });\n\n      t1.start();\n      t2.start();\n      t1.join();\n      t2.join();\n\n      int x = 0;\n   }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br")])]),t("h2",{attrs:{id:"_13、同步模式之顺序控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13、同步模式之顺序控制"}},[s._v("#")]),s._v(" 13、同步模式之顺序控制")]),s._v(" "),t("h3",{attrs:{id:"wait-notify版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wait-notify版本"}},[s._v("#")]),s._v(" Wait/Notify版本")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('static final Object LOCK = new Object();\n//判断先执行的内容是否执行完毕\nstatic Boolean judge = false;\npublic static void main(String[] args) {\n\tnew Thread(()->{\n\t\tsynchronized (LOCK) {\n\t\t\twhile (!judge) {\n\t\t\t\ttry {\n\t\t\t\t\tLOCK.wait();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println("2");\n\t\t}\n\t}).start();\n\n\tnew Thread(()->{\n\t\tsynchronized (LOCK) {\n\t\t\tSystem.out.println("1");\n\t\t\tjudge = true;\n               //执行完毕，唤醒所有等待线程\n\t\t\tLOCK.notifyAll();\n\t\t}\n\t}).start();\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h3",{attrs:{id:"交替输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#交替输出"}},[s._v("#")]),s._v(" 交替输出")]),s._v(" "),t("p",[t("strong",[s._v("wait/notify版本")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test4 {\n\tstatic Symbol symbol = new Symbol();\n\tpublic static void main(String[] args) {\n\t\tnew Thread(()->{\n\t\t\tsymbol.run("a", 1, 2);\n\t\t}).start();\n\n\t\tnew Thread(()->{\n\t\t\tsymbol.run("b", 2, 3);\n\n\t\t}).start();\n\t\tsymbol.run("c", 3, 1);\n\t\tnew Thread(()->{\n\n\t\t}).start();\n\t}\n}\n\nclass Symbol {\n\tpublic synchronized void run(String str, int flag, int nextFlag) {\n\t\tfor(int i=0; i<loopNumber; i++) {\n\t\t\twhile(flag != this.flag) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.wait();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(str);\n\t\t\t//设置下一个运行的线程标记\n\t\t\tthis.flag = nextFlag;\n\t\t\t//唤醒所有线程\n\t\t\tthis.notifyAll();\n\t\t}\n\t}\n\n\t/**\n\t * 线程的执行标记， 1->a 2->b 3->c\n\t */\n\tprivate int flag = 1;\n\tprivate int loopNumber = 5;\n\n\tpublic int getFlag() {\n\t\treturn flag;\n\t}\n\n\tpublic void setFlag(int flag) {\n\t\tthis.flag = flag;\n\t}\n\n\tpublic int getLoopNumber() {\n\t\treturn loopNumber;\n\t}\n\n\tpublic void setLoopNumber(int loopNumber) {\n\t\tthis.loopNumber = loopNumber;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br")])]),t("p",[t("strong",[s._v("await/signal版本")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test5 {\n\tstatic AwaitSignal awaitSignal = new AwaitSignal();\n\tstatic Condition conditionA = awaitSignal.newCondition();\n\tstatic Condition conditionB = awaitSignal.newCondition();\n\tstatic Condition conditionC = awaitSignal.newCondition();\n\tpublic static void main(String[] args) {\n\t\tnew Thread(()->{\n\t\t\tawaitSignal.run("a", conditionA, conditionB);\n\t\t}).start();\n\n\t\tnew Thread(()->{\n\t\t\tawaitSignal.run("b", conditionB, conditionC);\n\t\t}).start();\n\n\t\tnew Thread(()->{\n\t\t\tawaitSignal.run("c", conditionC, conditionA);\n\t\t}).start();\n\n\n\t\ttry {\n\t\t\tThread.sleep(1000);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tawaitSignal.lock();\n\t\ttry {\n            //唤醒一个等待的线程\n\t\t\tconditionA.signal();\n\t\t}finally {\n\t\t\tawaitSignal.unlock();\n\t\t}\n\t}\n}\n\nclass AwaitSignal extends ReentrantLock{\n\tpublic void run(String str, Condition thisCondition, Condition nextCondition) {\n\t\tfor(int i=0; i<loopNumber; i++) {\n\t\t\tlock();\n\t\t\ttry {\n                //全部进入等待状态\n\t\t\t\tthisCondition.await();\n\t\t\t\tSystem.out.print(str);\n\t\t\t\tnextCondition.signal();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tunlock();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate int loopNumber=5;\n\n\tpublic int getLoopNumber() {\n\t\treturn loopNumber;\n\t}\n\n\tpublic void setLoopNumber(int loopNumber) {\n\t\tthis.loopNumber = loopNumber;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br")])]),t("h2",{attrs:{id:"_14、threadlocal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14、threadlocal"}},[s._v("#")]),s._v(" 14、ThreadLocal")]),s._v(" "),t("h3",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("ThreadLocal是JDK包提供的，它提供了线程本地变量，也就是如果你创建了一个ThreadLocal变量，那么"),t("strong",[s._v("访问这个变量的每个线程都会有这个变量的一个本地副本")]),s._v("。当多个线程操作这个变量时，实际操作的是自己本地内存里面的变量，从而避免了线程安全问题")]),s._v(" "),t("h3",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class ThreadLocalStudy {\n   public static void main(String[] args) {\n      // 创建ThreadLocal变量\n      ThreadLocal<String> stringThreadLocal = new ThreadLocal<>();\n      ThreadLocal<User> userThreadLocal = new ThreadLocal<>();\n\n      // 创建两个线程，分别使用上面的两个ThreadLocal变量\n      Thread thread1 = new Thread(()->{\n         // stringThreadLocal第一次赋值\n         stringThreadLocal.set("thread1 stringThreadLocal first");\n         // stringThreadLocal第二次赋值\n         stringThreadLocal.set("thread1 stringThreadLocal second");\n         // userThreadLocal赋值\n         userThreadLocal.set(new User("Nyima", 20));\n\n         // 取值\n         System.out.println(stringThreadLocal.get());\n         System.out.println(userThreadLocal.get());\n          \n          // 移除\n\t\t userThreadLocal.remove();\n\t\t System.out.println(userThreadLocal.get());\n      });\n\n      Thread thread2 = new Thread(()->{\n         // stringThreadLocal第一次赋值\n         stringThreadLocal.set("thread2 stringThreadLocal first");\n         // stringThreadLocal第二次赋值\n         stringThreadLocal.set("thread2 stringThreadLocal second");\n         // userThreadLocal赋值\n         userThreadLocal.set(new User("Hulu", 20));\n\n         // 取值\n         System.out.println(stringThreadLocal.get());\n         System.out.println(userThreadLocal.get());\n      });\n\n      // 启动线程\n      thread1.start();\n      thread2.start();\n   }\n}\n\nclass User {\n   String name;\n   int age;\n\n   public User(String name, int age) {\n      this.name = name;\n      this.age = age;\n   }\n\n   @Override\n   public String toString() {\n      return "User{" +\n            "name=\'" + name + \'\\\'\' +\n            ", age=" + age +\n            \'}\';\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br")])]),t("p",[t("strong",[s._v("运行结果")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("thread1 stringThreadLocal second\nthread2 stringThreadLocal second\nUser{name='Nyima', age=20}\nUser{name='Hulu', age=20}\nnull\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("从运行结果可以看出")]),s._v(" "),t("ul",[t("li",[s._v("每个线程中的ThreadLocal变量是每个线程私有的，而不是共享的\n"),t("ul",[t("li",[s._v("从线程1和线程2的打印结果可以看出")])])]),s._v(" "),t("li",[s._v("ThreadLocal其实就相当于其泛型类型的一个变量，只不过是每个线程私有的\n"),t("ul",[t("li",[s._v("stringThreadLocal被赋值了两次，保存的是最后一次赋值的结果")])])]),s._v(" "),t("li",[s._v("ThreadLocal可以进行以下几个操作\n"),t("ul",[t("li",[s._v("set 设置值")]),s._v(" "),t("li",[s._v("get 取出值")]),s._v(" "),t("li",[s._v("remove 移除值")])])])]),s._v(" "),t("h3",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("h4",{attrs:{id:"thread中的threadlocals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thread中的threadlocals"}},[s._v("#")]),s._v(" Thread中的threadLocals")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class Thread implements Runnable {\n ...\n\n ThreadLocal.ThreadLocalMap threadLocals = null;\n\n // 放在后面说\n ThreadLocal.ThreadLocalMap inheritableThreadLocals = null;\n\n ...\n}\nstatic class ThreadLocalMap {\n    static class Entry extends WeakReference<ThreadLocal<?>> {\n        /** The value associated with this ThreadLocal. */\n        Object value;\n\n        Entry(ThreadLocal<?> k, Object v) {\n            super(k);\n            value = v;\n        }\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("可以看出Thread类中有一个threadLocals和一个inheritableThreadLocals，它们都是ThreadLocalMap类型的变量，而ThreadLocalMap是一个定制化的Hashmap。在默认情况下，每个线程中的这两个变量都为null。此处先讨论threadLocals，inheritableThreadLocals放在后面讨论")]),s._v(" "),t("h4",{attrs:{id:"threadlocal中的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal中的方法"}},[s._v("#")]),s._v(" "),t("strong",[s._v("ThreadLocal中的方法")])]),s._v(" "),t("p",[t("strong",[s._v("set方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public void set(T value) {\n    // 获取当前线程\n    Thread t = Thread.currentThread();\n    \n    // 获得ThreadLocalMap对象 \n    // 这里的get会返回Thread类中的threadLocals\n    ThreadLocalMap map = getMap(t);\n    \n    // 判断map是否已经创建，没创建就创建并放入值，创建了就直接放入\n    if (map != null)\n        // ThreadLocal自生的引用作为key，传入的值作为value\n        map.set(this, value);\n    else\n        createMap(t, value);\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[t("strong",[s._v("如果未创建")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("void createMap(Thread t, T firstValue) {\n    // 创建的同时设置想放入的值\n    // hreadLocal自生的引用作为key，传入的值作为value\n    t.threadLocals = new ThreadLocalMap(this, firstValue);\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("get方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public T get() {\n    // 获取当前线程\n    Thread t = Thread.currentThread();\n\t// 获取当前线程的threadLocals变量\n    ThreadLocalMap map = getMap(t);\n    \n    // 判断threadLocals是否被初始化了\n    if (map != null) {\n        // 已经初始化则直接返回\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings("unchecked")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    // 否则就创建threadLocals\n    return setInitialValue();\n}\nprivate T setInitialValue() {\n    // 这个方法返回是null\n    T value = initialValue();\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    \n    // 无论map创建与否，最终value的值都为null\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n    return value;\n}\nprotected T initialValue() {\n    return null;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("p",[t("strong",[s._v("remove方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public void remove() {\n    ThreadLocalMap m = getMap(Thread.currentThread());\n    if (m != null)\n        // 如果threadLocals已经被初始化，则移除\n        m.remove(this);\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[s._v("#")]),s._v(" "),t("strong",[s._v("总结")])]),s._v(" "),t("p",[s._v("在每个线程内部都有一个名为threadLocals的成员变量，该变量的类型为HashMap，其中"),t("strong",[s._v("key为我们定义的ThreadLocal变量的this引用，value则为我们使用set方法设置的值")]),s._v("。每个线程的本地变量存放在线程自己的内存变量threadLocals中")]),s._v(" "),t("p",[s._v("只有当前线程"),t("strong",[s._v("第一次调用ThreadLocal的set或者get方法时才会创建threadLocals")]),s._v("（inheritableThreadLocals也是一样）。其实每个线程的本地变量不是存放在ThreadLocal实例里面，而是存放在调用线程的threadLocals变量里面")]),s._v(" "),t("h2",{attrs:{id:"_15、inheritablethreadlocal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15、inheritablethreadlocal"}},[s._v("#")]),s._v(" 15、InheritableThreadLocal")]),s._v(" "),t("h3",{attrs:{id:"简介-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("从ThreadLocal的源码可以看出，无论是set、get、还是remove，都是相对于当前线程操作的")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Thread.currentThread()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("所以ThreadLocal无法从父线程传向子线程，所以InheritableThreadLocal出现了，"),t("strong",[s._v("它能够让父线程中ThreadLocal的值传给子线程。")])]),s._v(" "),t("p",[s._v("也就是从main所在的线程，传给thread1或thread2")]),s._v(" "),t("h3",{attrs:{id:"使用-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-2"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo1 {\n   public static void main(String[] args) {\n      ThreadLocal<String> stringThreadLocal = new ThreadLocal<>();\n      InheritableThreadLocal<String> stringInheritable = new InheritableThreadLocal<>();\n\n      // 主线程赋对上面两个变量进行赋值\n      stringThreadLocal.set("this is threadLocal");\n      stringInheritable.set("this is inheritableThreadLocal");\n\n      // 创建线程\n      Thread thread1 = new Thread(()->{\n         // 获得ThreadLocal中存放的值\n         System.out.println(stringThreadLocal.get());\n\n         // 获得InheritableThreadLocal存放的值\n         System.out.println(stringInheritable.get());\n      });\n\n      thread1.start();\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[t("strong",[s._v("运行结果")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("null\nthis is inheritableThreadLocal\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("可以看出InheritableThreadLocal的值成功从主线程传入了子线程，而ThreadLocal则没有")]),s._v(" "),t("h3",{attrs:{id:"原理-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理-2"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("h4",{attrs:{id:"inheritablethreadlocal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inheritablethreadlocal"}},[s._v("#")]),s._v(" InheritableThreadLocal")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public class InheritableThreadLocal<T> extends ThreadLocal<T> {\n    // 传入父线程中的一个值，然后直接返回\n    protected T childValue(T parentValue) {\n        return parentValue;\n    }\n\n  \t// 返回传入线程的inheritableThreadLocals\n    // Thread中有一个inheritableThreadLocals变量\n    // ThreadLocal.ThreadLocalMap inheritableThreadLocals = null;\n    ThreadLocalMap getMap(Thread t) {\n       return t.inheritableThreadLocals;\n    }\n\n \t// 创建一个inheritableThreadLocals\n    void createMap(Thread t, T firstValue) {\n        t.inheritableThreadLocals = new ThreadLocalMap(this, firstValue);\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("由如上代码可知，InheritableThreadLocal继承了ThreadLocal，并重写了三个方法。InheritableThreadLocal重写了"),t("strong",[s._v("createMap方法")]),s._v("，那么现在当第一次调用set方法时，创建的是当前线程的inheritableThreadLocals变量的实例而不再是threadLocals。当调用"),t("strong",[s._v("getMap方法")]),s._v("获取当前线程内部的map变量时，获取的是inheritableThreadLocals而不再是threadLocals")]),s._v(" "),t("h4",{attrs:{id:"childvalue-t-parentvalue-方法的调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#childvalue-t-parentvalue-方法的调用"}},[s._v("#")]),s._v(" childValue(T parentValue)方法的调用")]),s._v(" "),t("p",[s._v("在主函数运行时，会调用Thread的默认构造函数（"),t("strong",[s._v("创建主线程")]),s._v("，也就是父线程），所以我们先看看Thread的默认构造函数")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public Thread() {\n    init(null, null, "Thread-" + nextThreadNum(), 0);\n}\nprivate void init(ThreadGroup g, Runnable target, String name,\n                  long stackSize, AccessControlContext acc,\n                  boolean inheritThreadLocals) {\n   \t...\n        \n\t// 获得当前线程的，在这里是主线程\n    Thread parent = currentThread();\n   \n    ...\n    \n    // 如果父线程的inheritableThreadLocals存在\n    // 我们在主线程中调用set和get时，会创建inheritableThreadLocals\n    if (inheritThreadLocals && parent.inheritableThreadLocals != null)\n        // 设置子线程的inheritableThreadLocals\n        this.inheritableThreadLocals =\n            ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n    \n    /* Stash the specified stack size in case the VM cares */\n    this.stackSize = stackSize;\n\n    /* Set thread ID */\n    tid = nextThreadID();\n}\nstatic ThreadLocalMap createInheritedMap(ThreadLocalMap parentMap) {\n    return new ThreadLocalMap(parentMap);\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[s._v("在createInheritedMap内部使用父线程的inheritableThreadLocals变量作为构造函数创建了一个新的ThreadLocalMap变量，然后赋值给了子线程的inheritableThreadLocals变量")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('private ThreadLocalMap(ThreadLocalMap parentMap) {\n    Entry[] parentTable = parentMap.table;\n    int len = parentTable.length;\n    setThreshold(len);\n    table = new Entry[len];\n\n    for (int j = 0; j < len; j++) {\n        Entry e = parentTable[j];\n        if (e != null) {\n            @SuppressWarnings("unchecked")\n            ThreadLocal<Object> key = (ThreadLocal<Object>) e.get();\n            if (key != null) {\n                // 这里调用了 childValue 方法\n                // 该方法会返回parent的值\n                Object value = key.childValue(e.value);\n                \n                Entry c = new Entry(key, value);\n                int h = key.threadLocalHashCode & (len - 1);\n                while (table[h] != null)\n                    h = nextIndex(h, len);\n                table[h] = c;\n                size++;\n            }\n        }\n    }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[s._v("在该构造函数内部把父线程的inheritableThreadLocals成员变量的值复制到新的ThreadLocalMap对象中")]),s._v(" "),t("h4",{attrs:{id:"总结-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("InheritableThreadLocal类通过重写getMap和createMap，让本地变量保存到了具体线程的inheritableThreadLocals变量里面，那么线程在通过InheritableThreadLocal类实例的set或者get方法设置变量时，就会创建当前线程的inheritableThreadLocals变量。")]),s._v(" "),t("p",[t("strong",[s._v("当父线程创建子线程时，构造函数会把父线程中inheritableThreadLocals变量里面的本地变量复制一份保存到子线程的inheritableThreadLocals变量里面。")])]),s._v(" "),t("h1",{attrs:{id:"四、共享模型之内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、共享模型之内存"}},[s._v("#")]),s._v(" 四、共享模型之内存")]),s._v(" "),t("h2",{attrs:{id:"_1、java内存模型-jmm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、java内存模型-jmm"}},[s._v("#")]),s._v(" 1、JAVA内存模型（JMM）")]),s._v(" "),t("p",[s._v("JMM 即 Java Memory Model，它定义了**主存（共享内存）、工作内存（线程私有）**抽象概念，底层对应着 CPU 寄存器、缓存、硬件内存、 CPU 指令优化等。")]),s._v(" "),t("p",[t("strong",[s._v("JMM体现在以下几个方面")])]),s._v(" "),t("ul",[t("li",[s._v("原子性 - 保证指令不会受到线程上下文切换的影响")]),s._v(" "),t("li",[s._v("可见性 - 保证指令不会受 cpu 缓存的影响")]),s._v(" "),t("li",[s._v("有序性 - 保证指令不会受 cpu 指令并行优化的影响")])]),s._v(" "),t("h2",{attrs:{id:"_2、可见性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、可见性"}},[s._v("#")]),s._v(" 2、可见性")]),s._v(" "),t("h4",{attrs:{id:"引例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引例"}},[s._v("#")]),s._v(" 引例")]),s._v(" "),t("p",[t("strong",[s._v("退出不出的循环")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('static Boolean run = true;\n\tpublic static void main(String[] args) throws InterruptedException {\n\t\tnew Thread(()->{\n\t\t\twhile (run) {\n\t\t\t\t//如果run为真，则一直执行\n\t\t\t}\n\t\t}).start();\n\n\t\tThread.sleep(1000);\n\t\tSystem.out.println("改变run的值为false");\n\t\trun = false;\n\t}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("为什么无法退出该循环")])]),s._v(" "),t("ul",[t("li",[s._v("初始状态， t 线程刚开始从"),t("strong",[s._v("主内存")]),s._v("读取了 run 的值到"),t("strong",[s._v("工作内存")]),s._v("。")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145505.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145505.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("因为 t 线程要频繁从主内存中读取 run 的值，JIT 编译器会将 run 的值"),t("strong",[s._v("缓存至自己工作内存")]),s._v("中的高速缓存中， 减少对主存中 run 的访问，提高效率")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145517.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145517.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("1 秒之后，main 线程修改了 run 的值，并同步至主存，而 t 是从自己工作内存中的高速缓存中读取这个变量 的值，结果永远是"),t("strong",[s._v("旧值")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145529.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145529.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("解决方法")])]),s._v(" "),t("ul",[t("li",[s._v("使用"),t("strong",[s._v("volatile")]),s._v("易变关键字")]),s._v(" "),t("li",[s._v("它可以用来修饰"),t("strong",[s._v("成员变量")]),s._v("和"),t("strong",[s._v("静态成员变量")]),s._v("（放在主存中的变量），他可以避免线程从自己的工作缓存中查找变量的值，必须到主存中获取它的值，线程操作 volatile 变量都是"),t("strong",[s._v("直接操作主存")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('//使用易变关键字\nvolatile static Boolean run = true;\npublic static void main(String[] args) throws InterruptedException {\n\tnew Thread(()->{\n\t\twhile (run) {\n\t\t\t//如果run为真，则一直执行\n\t\t}\n\t}).start();\n\n\tThread.sleep(1000);\n\tSystem.out.println("改变run的值为false");\n\trun = false;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h4",{attrs:{id:"可见性与原子性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可见性与原子性"}},[s._v("#")]),s._v(" 可见性与原子性")]),s._v(" "),t("p",[s._v("前面例子体现的实际就是"),t("strong",[s._v("可见性")]),s._v("，它保证的是在多个线程之间，一个线程对"),t("strong",[s._v("volatile变量")]),s._v("的修改对另一个线程可见， "),t("strong",[s._v("不能")]),s._v("保证原子性，仅用在"),t("strong",[s._v("一个写")]),s._v("线程，"),t("strong",[s._v("多个读")]),s._v("线程的情况")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("注意 synchronized 语句块既可以保证代码块的"),t("strong",[s._v("原子性")]),s._v("，也同时保证代码块内变量的"),t("strong",[s._v("可见性")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("但缺点是 synchronized 是属于"),t("strong",[s._v("重量级")]),s._v("操作，性能相对更低。")])]),s._v(" "),t("li",[t("p",[s._v("如果在前面示例的死循环中加入 System.out.println() 会发现即使不加 volatile 修饰符，线程 t 也能正确看到 对 run 变量的修改了，想一想为什么？")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("因为使用了"),t("strong",[s._v("synchronized")]),s._v("关键字")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public void println(String x) {\n\t\t//使用了synchronized关键字\n        synchronized (this) {\n            print(x);\n            newLine();\n        }\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])])])]),s._v(" "),t("h4",{attrs:{id:"两阶终止模式优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两阶终止模式优化"}},[s._v("#")]),s._v(" 两阶终止模式优化")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Test7 {\n\tpublic static void main(String[] args) throws InterruptedException {\n\t\tMonitor monitor = new Monitor();\n\t\tmonitor.start();\n\t\tThread.sleep(3500);\n\t\tmonitor.stop();\n\t}\n}\n\nclass Monitor {\n\n\tThread monitor;\n\t//设置标记，用于判断是否被终止了\n\tprivate volatile boolean stop = false;\n\t/**\n\t * 启动监控器线程\n\t */\n\tpublic void start() {\n\t\t//设置线控器线程，用于监控线程状态\n\t\tmonitor = new Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\t//开始不停的监控\n\t\t\t\twhile (true) {\n\t\t\t\t\tif(stop) {\n\t\t\t\t\t\tSystem.out.println("处理后续任务");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println("监控器运行中...");\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//线程休眠\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\tSystem.out.println("被打断了");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmonitor.start();\n\t}\n\n\t/**\n\t * \t用于停止监控器线程\n\t */\n\tpublic void stop() {\n\t\t//打断线程\n\t\tmonitor.interrupt();\n        //修改标记\n\t\tstop = true;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])]),t("h4",{attrs:{id:"同步模式之犹豫模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步模式之犹豫模式"}},[s._v("#")]),s._v(" 同步模式之犹豫模式")]),s._v(" "),t("p",[t("strong",[s._v("定义")])]),s._v(" "),t("p",[s._v("Balking （犹豫）模式用在一个线程发现另一个线程或本线程"),t("strong",[s._v("已经做了某一件相同")]),s._v("的事，那么本线程就无需再做 了，"),t("strong",[s._v("直接结束返回")])]),s._v(" "),t("ul",[t("li",[s._v("用一个标记来判断该任务是否已经被执行过了")]),s._v(" "),t("li",[s._v("需要避免线程安全问题\n"),t("ul",[t("li",[s._v("加锁的代码块要尽量的小，以保证性能")])])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.nyima.day1;\n\n/**\n * @author Chen Panwen\n * @data 2020/3/26 16:11\n */\npublic class Test7 {\n\tpublic static void main(String[] args) throws InterruptedException {\n\t\tMonitor monitor = new Monitor();\n\t\tmonitor.start();\n\t\tmonitor.start();\n\t\tThread.sleep(3500);\n\t\tmonitor.stop();\n\t}\n}\n\nclass Monitor {\n\n\tThread monitor;\n\t//设置标记，用于判断是否被终止了\n\tprivate volatile boolean stop = false;\n\t//设置标记，用于判断是否已经启动过了\n\tprivate boolean starting = false;\n\t/**\n\t * 启动监控器线程\n\t */\n\tpublic void start() {\n\t\t//上锁，避免多线程运行时出现线程安全问题\n\t\tsynchronized (this) {\n\t\t\tif (starting) {\n\t\t\t\t//已被启动，直接返回\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//启动监视器，改变标记\n\t\t\tstarting = true;\n\t\t}\n\t\t//设置线控器线程，用于监控线程状态\n\t\tmonitor = new Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\t//开始不停的监控\n\t\t\t\twhile (true) {\n\t\t\t\t\tif(stop) {\n\t\t\t\t\t\tSystem.out.println("处理后续任务");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println("监控器运行中...");\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//线程休眠\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\tSystem.out.println("被打断了");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmonitor.start();\n\t}\n\n\t/**\n\t * \t用于停止监控器线程\n\t */\n\tpublic void stop() {\n\t\t//打断线程\n\t\tmonitor.interrupt();\n\t\tstop = true;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br")])]),t("h2",{attrs:{id:"_3、有序性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、有序性"}},[s._v("#")]),s._v(" 3、有序性")]),s._v(" "),t("h3",{attrs:{id:"指令重排"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令重排"}},[s._v("#")]),s._v(" 指令重排")]),s._v(" "),t("ul",[t("li",[s._v("JVM 会在"),t("strong",[s._v("不影响正确性")]),s._v("的前提下，可以"),t("strong",[s._v("调整")]),s._v("语句的执行"),t("strong",[s._v("顺序")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145546.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145546.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("这种特性称之为『"),t("strong",[s._v("指令重排")]),s._v("』，"),t("strong",[s._v("多线程下『指令重排』会影响正确性")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"指令重排序优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令重排序优化"}},[s._v("#")]),s._v(" 指令重排序优化")]),s._v(" "),t("ul",[t("li",[s._v("事实上，现代处理器会设计为一个时钟周期完成一条执行时间长的 CPU 指令。为什么这么做呢？可以想到指令还可以再划分成一个个更小的阶段，例如，每条指令都可以分为： "),t("strong",[s._v("取指令 - 指令译码 - 执行指令 - 内存访问 - 数据写回")]),s._v(" 这5 个阶段")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145615.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145615.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在不改变程序结果的前提下，这些指令的各个阶段可以通过"),t("strong",[s._v("重排序")]),s._v("和"),t("strong",[s._v("组合")]),s._v("来实现"),t("strong",[s._v("指令级并行")])])]),s._v(" "),t("li",[t("p",[s._v("指令重排的前提是，重排指令"),t("strong",[s._v("不能影响结果")]),s._v("，例如")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 可以重排的例子 \nint a = 10; \nint b = 20; \nSystem.out.println( a + b );\n\n// 不能重排的例子 \nint a = 10;\nint b = a - 5;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"支持流水线的处理器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持流水线的处理器"}},[s._v("#")]),s._v(" 支持流水线的处理器")]),s._v(" "),t("p",[s._v("现代 CPU 支持多级"),t("strong",[s._v("指令流水线")]),s._v("，例如支持"),t("strong",[s._v("同时")]),s._v("执行 "),t("strong",[s._v("取指令 - 指令译码 - 执行指令 - 内存访问 - 数据写回")]),s._v(" 的处理器，就可以称之为五级指令流水线。这时 CPU 可以在一个时钟周期内，同时运行五条指令的不同阶段（相当于一 条执行时间长的复杂指令），IPC = 1，本质上，流水线技术并不能缩短单条指令的执行时间，但它变相地提高了指令地"),t("strong",[s._v("吞吐率")]),s._v("。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145602.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145602.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("在多线程环境下，指令重排序可能导致出现意料之外的结果")])]),s._v(" "),t("h3",{attrs:{id:"解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[s._v("#")]),s._v(" 解决办法")]),s._v(" "),t("p",[t("strong",[s._v("volatile")]),s._v(" 修饰的变量，可以"),t("strong",[s._v("禁用")]),s._v("指令重排")]),s._v(" "),t("ul",[t("li",[s._v("禁止的是加volatile关键字变量之前的代码被重排序")])]),s._v(" "),t("h2",{attrs:{id:"_4、内存屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、内存屏障"}},[s._v("#")]),s._v(" 4、内存屏障")]),s._v(" "),t("ul",[t("li",[s._v("可见性\n"),t("ul",[t("li",[t("strong",[s._v("写屏障")]),s._v("（sfence）保证在该屏障"),t("strong",[s._v("之前")]),s._v("的，对共享变量的改动，都同步到主存当中")]),s._v(" "),t("li",[t("strong",[s._v("读屏障")]),s._v("（lfence）保证在该屏障"),t("strong",[s._v("之后")]),s._v("，对共享变量的读取，加载的是主存中新数据")])])]),s._v(" "),t("li",[s._v("有序性\n"),t("ul",[t("li",[s._v("写屏障会确保指令重排序时，不会将"),t("strong",[s._v("写屏障之前")]),s._v("的代码排在写屏障之后")]),s._v(" "),t("li",[s._v("读屏障会确保指令重排序时，不会将"),t("strong",[s._v("读屏障之后")]),s._v("的代码排在读屏障之前")])])])]),s._v(" "),t("h2",{attrs:{id:"_5、volatile-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、volatile-原理"}},[s._v("#")]),s._v(" 5、volatile 原理")]),s._v(" "),t("p",[s._v("volatile的底层实现原理是"),t("strong",[s._v("内存屏障")]),s._v("，Memory Barrier（Memory Fence）")]),s._v(" "),t("ul",[t("li",[s._v("对 volatile 变量的写指令后会加入写屏障")]),s._v(" "),t("li",[s._v("对 volatile 变量的读指令前会加入读屏障")])]),s._v(" "),t("h3",{attrs:{id:"如何保证可见性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何保证可见性"}},[s._v("#")]),s._v(" 如何保证可见性")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("写屏障（sfence）保证在该屏障之前的，对共享变量的改动，都同步到主存当中")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145630.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145630.png",alt:"img"}}),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("而读屏障（lfence）保证在该屏障之后，对共享变量的读取，加载的是主存中新数据")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145713.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145713.png",alt:"img"}}),t("OutboundLink")],1)])])]),s._v(" "),t("h3",{attrs:{id:"如何保证有序性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何保证有序性"}},[s._v("#")]),s._v(" 如何保证有序性")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("写屏障会确保指令重排序时，不会将写屏障之前的代码排在写屏障之后")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145723.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145723.png",alt:"img"}}),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("读屏障会确保指令重排序时，不会将读屏障之后的代码排在读屏障之前")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145729.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145729.png",alt:"img"}}),t("OutboundLink")],1)])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145741.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145741.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("但是不能解决指令交错问题")])]),s._v(" "),t("ul",[t("li",[s._v("写屏障仅仅是保证之后的读能够读到新的结果，但不能保证读跑到它前面去")]),s._v(" "),t("li",[s._v("而有序性的保证也只是保证了"),t("strong",[s._v("本线程内")]),s._v("相关代码不被重排序")])]),s._v(" "),t("h3",{attrs:{id:"实现原理之lock前缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现原理之lock前缀"}},[s._v("#")]),s._v(" 实现原理之Lock前缀")]),s._v(" "),t("p",[s._v("在X86处理器下通过工具获取JIT编译器生成的汇编指令来查看对volatile进行写操作时")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("instance = new Singleton();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("对应的汇编代码是")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("... lock addl ...\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("有volatile变量修饰的共享变量进行写操作的时候会多出第二行汇编代码，通过查IA-32架构软件开发者手册可知，"),t("strong",[s._v("Lock前缀")]),s._v("的指令在多核处理器下会引发了两件事")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Lock前缀指令会引起处理器")]),s._v(" "),t("p",[s._v("缓存回写到内存")]),s._v(" "),t("ul",[t("li",[s._v("Lock前缀指令导致在执行指令期间，声言处理器的LOCK#信号。在多处理器环境中，LOCK#信号确保在声言该信号期间，处理器可以独占任何共享内存。但是，在最近的处理器里，LOCK #信号一般不锁总线，而是"),t("strong",[s._v("锁缓存")]),s._v("，毕竟锁总线开销的比较大。使用缓存一致性机制来确保修改的原子性，此操作被称为“缓存锁定”，"),t("strong",[s._v("缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据")])])])]),s._v(" "),t("li",[t("p",[s._v("一个处理器的缓存回写到内存会")]),s._v(" "),t("p",[s._v("导致其他处理器的缓存无效")]),s._v(" "),t("ul",[t("li",[s._v("在多核处理器系统中进行操作的时候，IA-32和Intel 64处理器能"),t("strong",[s._v("嗅探其他处理器访问系统内存和它们的内部缓存")]),s._v("。处理器使用嗅探技术保证它的内部缓存、系统内存和其他处理器的缓存的数据在总线上保持一致")])])])]),s._v(" "),t("h1",{attrs:{id:"五、共享模型之无锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、共享模型之无锁"}},[s._v("#")]),s._v(" 五、共享模型之无锁")]),s._v(" "),t("h2",{attrs:{id:"_1、无锁解决线程安全问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、无锁解决线程安全问题"}},[s._v("#")]),s._v(" 1、无锁解决线程安全问题")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用"),t("strong",[s._v("原子整数")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("AtomicInteger balance = new AtomicInteger();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('interface Account {\n\tInteger getBalance();\n\n\tvoid withdraw(Integer amount);\n\n\t/**\n\t * 方法内会启动 1000 个线程，每个线程做 -10 元 的操作     * 如果初始余额为 10000 那么正确的结果应当是 0\n\t */\n\tstatic void demo(Account account) {\n\t\tList<Thread> ts = new ArrayList<>();\n\t\tlong start = System.nanoTime();\n\t\tfor (int i = 0; i < 1000; i++) {\n\t\t\tts.add(new Thread(() -> {\n\t\t\t\taccount.withdraw(10);\n\t\t\t}));\n\t\t}\n\t\tts.forEach(Thread::start);\n\t\tts.forEach(t -> {\n\t\t\ttry {\n\t\t\t\tt.join();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t});\n\t\tlong end = System.nanoTime();\n\t\tSystem.out.println(account.getBalance() + " cost: " + (end - start) / 1000_000 + " ms");\n\t}\n}\n\n//线程不安全的做法\nclass AccountUnsafe implements Account {\n\tprivate Integer balance;\n\n\tpublic AccountUnsafe(Integer balance) {\n\t\tthis.balance = balance;\n\t}\n\n\n\t@Override\n\tpublic Integer getBalance() {\n\t\treturn this.balance;\n\t}\n\n\t@Override\n\tpublic synchronized void withdraw(Integer amount) {\n\t\tbalance -= amount;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tAccount.demo(new AccountUnsafe(10000));\n\t\tAccount.demo(new AccountCas(10000));\n\t}\n}\n\n//线程安全的做法\nclass AccountCas implements Account {\n\t//使用原子整数\n\tprivate AtomicInteger balance;\n\n\tpublic AccountCas(int balance) {\n\t\tthis.balance = new AtomicInteger(balance);\n\t}\n\n\t@Override\n\tpublic Integer getBalance() {\n\t\t//得到原子整数的值\n\t\treturn balance.get();\n\t}\n\n\t@Override\n\tpublic void withdraw(Integer amount) {\n\t\twhile(true) {\n\t\t\t//获得修改前的值\n\t\t\tint prev = balance.get();\n\t\t\t//获得修改后的值\n\t\t\tint next = prev-amount;\n\t\t\t//比较并设值\n\t\t\tif(balance.compareAndSet(prev, next)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br")])]),t("h2",{attrs:{id:"_2、cas与volatile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、cas与volatile"}},[s._v("#")]),s._v(" 2、CAS与volatile")]),s._v(" "),t("p",[s._v("前面看到的 AtomicInteger 的解决方法，内部并没有用锁来保护共享变量的线程安全。那么它是如何实现的呢？")]),s._v(" "),t("p",[s._v("其中的"),t("strong",[s._v("关键是 compareAndSwap")]),s._v("（比较并设置值），它的"),t("strong",[s._v("简称就是 CAS")]),s._v(" （也有 Compare And Swap 的说法），它必须是"),t("strong",[s._v("原子操作")]),s._v("。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145914.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145914.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[s._v("#")]),s._v(" "),t("strong",[s._v("工作流程")])]),s._v(" "),t("ul",[t("li",[s._v("当一个线程要去修改Account对象中的值时，先获取值pre（调用get方法），然后再将其设置为新的值next（调用cas方法）。在调用cas方法时，会将pre与Account中的余额进行比较。\n"),t("ul",[t("li",[s._v("如果"),t("strong",[s._v("两者相等")]),s._v("，就说明该值还未被其他线程修改，此时便可以进行修改操作。")]),s._v(" "),t("li",[s._v("如果"),t("strong",[s._v("两者不相等")]),s._v("，就不设置值，重新获取值pre（调用get方法），然后再将其设置为新的值next（调用cas方法），直到修改成功为止。")])])])]),s._v(" "),t("p",[t("strong",[s._v("注意")])]),s._v(" "),t("ul",[t("li",[s._v("其实 CAS 的底层是 "),t("strong",[s._v("lock cmpxchg")]),s._v(" 指令（X86 架构），在单核 CPU 和多核 CPU 下都能够保证【比较-交换】的"),t("strong",[s._v("原子性")]),s._v("。")]),s._v(" "),t("li",[s._v("在多核状态下，某个核执行到带 lock 的指令时，CPU 会让总线锁住，当这个核把此指令执行完毕，再开启总线。这个过程中不会被线程的调度机制所打断，保证了多个线程对内存操作的准确性，是原子的。")])]),s._v(" "),t("h3",{attrs:{id:"volatile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[s._v("#")]),s._v(" volatile")]),s._v(" "),t("p",[s._v("获取共享变量时，为了保证该变量的"),t("strong",[s._v("可见性")]),s._v("，需要使用 "),t("strong",[s._v("volatile")]),s._v(" 修饰。\n它可以用来修饰成员变量和静态成员变量，他可以避免线程从自己的工作缓存中查找变量的值，必须到"),t("strong",[s._v("主存中获取")]),s._v(" 它的值，线程操作 volatile 变量都是直接操作主存。即一个线程对 volatile 变量的修改，对另一个线程可见。")]),s._v(" "),t("p",[t("strong",[s._v("注意")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("volatile 仅仅保证了共享变量的可见性，让其它线程能够看到新值，但不能解决指令交错问题（不能保证原子性）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("CAS 必须借助 volatile")]),s._v(" 才能读取到共享变量的新值来实现【比较并交换】的效果")]),s._v(" "),t("h3",{attrs:{id:"效率问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#效率问题"}},[s._v("#")]),s._v(" 效率问题")]),s._v(" "),t("p",[s._v("一般情况下，使用无锁比使用加锁的"),t("strong",[s._v("效率更高。")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145931.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145931.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("原因")])]),s._v(" "),t("h3",{attrs:{id:"cas特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cas特点"}},[s._v("#")]),s._v(" CAS特点")]),s._v(" "),t("p",[s._v("结合 CAS 和 volatile 可以实现"),t("strong",[s._v("无锁并发")]),s._v("，适用于"),t("strong",[s._v("线程数少、多核 CPU")]),s._v(" 的场景下。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("CAS 是基于"),t("strong",[s._v("乐观锁")]),s._v("的思想：乐观的估计，不怕别的线程来修改共享变量，就算改了也没关系，我吃亏点再重试呗。")])]),s._v(" "),t("li",[t("p",[s._v("synchronized 是基于悲观锁的思想：悲观的估计，得防着其它线程来修改共享变量，我上了锁你们都别想改，我改完了解开锁，你们才有机会。")])]),s._v(" "),t("li",[t("p",[s._v("CAS 体现的是")]),s._v(" "),t("p",[s._v("无锁并发、无阻塞并发")]),s._v(" "),t("p",[s._v("，请仔细体会这两句话的意思")]),s._v(" "),t("ul",[t("li",[s._v("因为没有使用 synchronized，所以线程不会陷入阻塞，这是效率提升的因素之一")]),s._v(" "),t("li",[s._v("但如果竞争激烈，可以想到重试必然频繁发生，反而效率会受影响")])])])]),s._v(" "),t("h2",{attrs:{id:"_3、原子整数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、原子整数"}},[s._v("#")]),s._v(" 3、原子整数")]),s._v(" "),t("p",[s._v("J.U.C 并发包提供了")]),s._v(" "),t("ul",[t("li",[s._v("AtomicBoolean")]),s._v(" "),t("li",[s._v("AtomicInteger")]),s._v(" "),t("li",[s._v("AtomicLong")])]),s._v(" "),t("p",[t("strong",[s._v("以 AtomicInteger 为例")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" AtomicInteger i = new AtomicInteger(0);\n \n// 获取并自增（i = 0, 结果 i = 1, 返回 0），类似于 i++ System.out.println(i.getAndIncrement());\n \n// 自增并获取（i = 1, 结果 i = 2, 返回 2），类似于 ++i System.out.println(i.incrementAndGet());\n \n// 自减并获取（i = 2, 结果 i = 1, 返回 1），类似于 --i System.out.println(i.decrementAndGet());\n \n// 获取并自减（i = 1, 结果 i = 0, 返回 1），类似于 i--\nSystem.out.println(i.getAndDecrement());\n \n// 获取并加值（i = 0, 结果 i = 5, 返回 0） \nSystem.out.println(i.getAndAdd(5));\n \n// 加值并获取（i = 5, 结果 i = 0, 返回 0） \nSystem.out.println(i.addAndGet(-5));\n \n// 获取并更新（i = 0, p 为 i 的当前值, 结果 i = -2, 返回 0） \n// 其中函数中的操作能保证原子，但函数需要无副作用 \nSystem.out.println(i.getAndUpdate(p -> p - 2));\n \n// 更新并获取（i = -2, p 为 i 的当前值, 结果 i = 0, 返回 0）\n// 其中函数中的操作能保证原子，但函数需要无副作用 \nSystem.out.println(i.updateAndGet(p -> p + 2));\n \n// 获取并计算（i = 0, p 为 i 的当前值, x 为参数1, 结果 i = 10, 返回 0） \n// 其中函数中的操作能保证原子，但函数需要无副作用 // getAndUpdate 如果在 lambda 中引用了外部的局部变量，要保证该局部变量是 final 的 \n// getAndAccumulate 可以通过 参数1 来引用外部的局部变量，但因为其不在 lambda 中因此不必是 \nfinal System.out.println(i.getAndAccumulate(10, (p, x) -> p + x));\n \n// 计算并获取（i = 10, p 为 i 的当前值, x 为参数1, 结果 i = 0, 返回 0） \n// 其中函数中的操作能保证原子，但函数需要无副作用\nSystem.out.println(i.accumulateAndGet(-10, (p, x) -> p + x));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h2",{attrs:{id:"_4、原子引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、原子引用"}},[s._v("#")]),s._v(" 4、原子引用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public interface DecimalAccount {\n\tBigDecimal getBalance();\n\n\tvoid withdraw(BigDecimal amount);\n\n\t/**\n\t * 方法内会启动 1000 个线程，每个线程做 -10 元 的操作    \n     * 如果初始余额为 10000 那么正确的结果应当是 0\n\t */\n\tstatic void demo(DecimalAccountImpl account) {\n\t\tList<Thread> ts = new ArrayList<>();\n\t\tlong start = System.nanoTime();\n\t\tfor (int i = 0; i < 1000; i++) {\n\t\t\tts.add(new Thread(() -> {\n\t\t\t\taccount.withdraw(BigDecimal.TEN);\n\t\t\t}));\n\t\t}\n\t\tts.forEach(Thread::start);\n\t\tts.forEach(t -> {\n\t\t\ttry {\n\t\t\t\tt.join();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t});\n\t\tlong end = System.nanoTime();\n\t\tSystem.out.println(account.getBalance() + " cost: " + (end - start) / 1000_000 + " ms");\n\t}\n}\n\nclass DecimalAccountImpl implements DecimalAccount {\n\t//原子引用，泛型类型为小数类型\n\tAtomicReference<BigDecimal> balance;\n\n\tpublic DecimalAccountImpl(BigDecimal balance) {\n\t\tthis.balance = new AtomicReference<BigDecimal>(balance);\n\t}\n\n\t@Override\n\tpublic BigDecimal getBalance() {\n\t\treturn balance.get();\n\t}\n\n\t@Override\n\tpublic void withdraw(BigDecimal amount) {\n\t\twhile(true) {\n\t\t\tBigDecimal pre = balance.get();\n\t\t\tBigDecimal next = pre.subtract(amount);\n\t\t\tif(balance.compareAndSet(pre, next)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tDecimalAccount.demo(new DecimalAccountImpl(new BigDecimal("10000")));\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br")])]),t("h2",{attrs:{id:"_5、aba问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、aba问题"}},[s._v("#")]),s._v(" 5、ABA问题")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo3 {\n\tstatic AtomicReference<String> str = new AtomicReference<>("A");\n\tpublic static void main(String[] args) {\n\t\tnew Thread(() -> {\n\t\t\tString pre = str.get();\n\t\t\tSystem.out.println("change");\n\t\t\ttry {\n\t\t\t\tother();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\t//把str中的A改为C\n\t\t\tSystem.out.println("change A->C " + str.compareAndSet(pre, "C"));\n\t\t}).start();\n\t}\n\n\tstatic void other() throws InterruptedException {\n\t\tnew Thread(()-> {\n\t\t\tSystem.out.println("change A->B " + str.compareAndSet("A", "B"));\n\t\t}).start();\n\t\tThread.sleep(500);\n\t\tnew Thread(()-> {\n\t\t\tSystem.out.println("change B->A " + str.compareAndSet("B", "A"));\n\t\t}).start();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145952.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608145952.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("主线程仅能判断出共享变量的值与初值 A "),t("strong",[s._v("是否相同")]),s._v("，不能感知到这种从 A 改为 B 又 改回 A 的情况，如果主线程希望：\n只要有其它线程【"),t("strong",[s._v("动过了")]),s._v("】共享变量，那么自己的 "),t("strong",[s._v("cas 就算失败")]),s._v("，这时，仅比较值是不够的，需要再加一个"),t("strong",[s._v("版本号")])]),s._v(" "),t("h3",{attrs:{id:"atomicstampedreference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#atomicstampedreference"}},[s._v("#")]),s._v(" "),t("strong",[s._v("AtomicStampedReference")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo3 {\n\t//指定版本号\n\tstatic AtomicStampedReference<String> str = new AtomicStampedReference<>("A", 0);\n\tpublic static void main(String[] args) {\n\t\tnew Thread(() -> {\n\t\t\tString pre = str.getReference();\n\t\t\t//获得版本号\n\t\t\tint stamp = str.getStamp();\n\t\t\tSystem.out.println("change");\n\t\t\ttry {\n\t\t\t\tother();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\t//把str中的A改为C,并比对版本号，如果版本号相同，就执行替换，并让版本号+1\n\t\t\tSystem.out.println("change A->C stamp " + stamp + str.compareAndSet(pre, "C", stamp, stamp+1));\n\t\t}).start();\n\t}\n\n\tstatic void other() throws InterruptedException {\n\t\tnew Thread(()-> {\n\t\t\tint stamp = str.getStamp();\n\t\t\tSystem.out.println("change A->B stamp " + stamp + str.compareAndSet("A", "B", stamp, stamp+1));\n\t\t}).start();\n\t\tThread.sleep(500);\n\t\tnew Thread(()-> {\n\t\t\tint stamp = str.getStamp();\n\t\t\tSystem.out.println("change B->A stamp " + stamp +  str.compareAndSet("B", "A", stamp, stamp+1));\n\t\t}).start();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150003.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150003.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"atomicmarkablereference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#atomicmarkablereference"}},[s._v("#")]),s._v(" AtomicMarkableReference")]),s._v(" "),t("p",[s._v("AtomicStampedReference 可以给原子引用加上版本号，追踪原子引用整个的变化过程，如： A -> B -> A -> C ，通过AtomicStampedReference，我们可以知道，引用变量中途被更改了几次。\n但是有时候，并不关心引用变量更改了几次，只是单纯的关心"),t("strong",[s._v("是否更改过")]),s._v("，所以就有了 "),t("strong",[s._v("AtomicMarkableReference")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo4 {\n\t//指定版本号\n\tstatic AtomicMarkableReference<String> str = new AtomicMarkableReference<>("A", true);\n\tpublic static void main(String[] args) {\n\t\tnew Thread(() -> {\n\t\t\tString pre = str.getReference();\n\t\t\tSystem.out.println("change");\n\t\t\ttry {\n\t\t\t\tother();\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\t//把str中的A改为C,并比对版本号，如果版本号相同，就执行替换，并让版本号+1\n\t\t\tSystem.out.println("change A->C mark " +  str.compareAndSet(pre, "C", true, false));\n\t\t}).start();\n\t}\n\n\tstatic void other() throws InterruptedException {\n\t\tnew Thread(() -> {\n\t\t\tSystem.out.println("change A->A mark " + str.compareAndSet("A", "A", true, false));\n\t\t}).start();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150017.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150017.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"两者的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两者的区别"}},[s._v("#")]),s._v(" 两者的区别")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("AtomicStampedReference")]),s._v(" 需要我们传入"),t("strong",[s._v("整型变量")]),s._v("作为版本号，来判定是否被更改过")]),s._v(" "),t("li",[t("strong",[s._v("AtomicMarkableReference")]),s._v("需要我们传入"),t("strong",[s._v("布尔变量")]),s._v("作为标记，来判断是否被更改过")])]),s._v(" "),t("h2",{attrs:{id:"_6、原子数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、原子数组"}},[s._v("#")]),s._v(" 6、原子数组")]),s._v(" "),t("ul",[t("li",[s._v("AtomicIntegerArray")]),s._v(" "),t("li",[s._v("AtomicLongArray")]),s._v(" "),t("li",[s._v("AtomicReferenceArray")])]),s._v(" "),t("h3",{attrs:{id:"lamba表达式的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lamba表达式的使用"}},[s._v("#")]),s._v(" lamba表达式的使用")]),s._v(" "),t("ul",[t("li",[s._v("提供者\n"),t("ul",[t("li",[s._v("无参又返回")]),s._v(" "),t("li",[s._v("()->返回结果")])])]),s._v(" "),t("li",[s._v("方法\n"),t("ul",[t("li",[s._v("有参有返回")]),s._v(" "),t("li",[s._v("(参数一…)->返回结果")])])]),s._v(" "),t("li",[s._v("消费者\n"),t("ul",[t("li",[s._v("有参无返回")]),s._v(" "),t("li",[s._v("(参数一…)->void")])])])]),s._v(" "),t("h2",{attrs:{id:"_7、原子更新器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、原子更新器"}},[s._v("#")]),s._v(" 7、原子更新器")]),s._v(" "),t("ul",[t("li",[s._v("AtomicReferenceFieldUpdater // 域 字段")]),s._v(" "),t("li",[s._v("AtomicIntegerFieldUpdater")]),s._v(" "),t("li",[s._v("AtomicLongFieldUpdate")])]),s._v(" "),t("p",[s._v("原子更新器用于帮助我们改变某个对象中的某个属性")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo1 {\n   public static void main(String[] args) {\n      Student student = new Student();\n       \n      // 获得原子更新器\n      // 泛型\n      // 参数1 持有属性的类 参数2 被更新的属性的类\n      // newUpdater中的参数：第三个为属性的名称\n      AtomicReferenceFieldUpdater<Student, String> updater = AtomicReferenceFieldUpdater.newUpdater(Student.class, String.class, "name");\n       \n      // 修改\n      updater.compareAndSet(student, null, "Nyima");\n      System.out.println(student);\n   }\n}\n\nclass Student {\n   volatile String name;\n\n   @Override\n   public String toString() {\n      return "Student{" +\n            "name=\'" + name + \'\\\'\' +\n            \'}\';\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h3",{attrs:{id:"原子更新器初始化过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原子更新器初始化过程"}},[s._v("#")]),s._v(" 原子更新器初始化过程")]),s._v(" "),t("p",[s._v("从上面的例子可以看出，原子更新器是通过newUpdater来获取实例的。其中传入了三个参数")]),s._v(" "),t("ul",[t("li",[s._v("拥有属性的类的Class")]),s._v(" "),t("li",[s._v("属性的Class")]),s._v(" "),t("li",[s._v("属性的名称")])]),s._v(" "),t("p",[s._v("大概可以猜出来，"),t("strong",[s._v("初始化过程用到了反射")]),s._v("，让我们看看源码来验证一下这个猜测。")]),s._v(" "),t("h4",{attrs:{id:"newupdater方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#newupdater方法"}},[s._v("#")]),s._v(" newUpdater方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public static <U,W> AtomicReferenceFieldUpdater<U,W> newUpdater(Class<U> tclass,\n                                                                Class<W> vclass,\n                                                                String fieldName) {\n    // 返回了一个AtomicReferenceFieldUpdaterImpl实例\n    return new AtomicReferenceFieldUpdaterImpl<U,W>\n        (tclass, vclass, fieldName, Reflection.getCallerClass());\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("从newUpdater方法还并不能看出来具体的初始化过程")]),s._v(" "),t("h4",{attrs:{id:"内部实现类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部实现类"}},[s._v("#")]),s._v(" 内部实现类")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201020145006.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201020145006.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("AtomicReferenceFieldUpdater为抽象类，该类"),t("strong",[s._v("内部有一个自己的实现类AtomicReferenceFieldUpdaterImpl")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("private static final class AtomicReferenceFieldUpdaterImpl<T,V>\n        extends AtomicReferenceFieldUpdater<T,V>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201020145119.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201020145119.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("构造方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('AtomicReferenceFieldUpdaterImpl(final Class<T> tclass,\n                                final Class<V> vclass,\n                                final String fieldName,\n                                final Class<?> caller) {\n    // 用于保存要被修改的属性\n    final Field field;\n    \n    // 属性的Class\n    final Class<?> fieldClass;\n    \n    // field的修饰符\n    final int modifiers;\n    try {\n        // 反射获得属性\n        field = AccessController.doPrivileged(\n            new PrivilegedExceptionAction<Field>() {\n                public Field run() throws NoSuchFieldException {\n                    // tclass为传入的属性的Class，可以通过它来获得属性\n                    return tclass.getDeclaredField(fieldName);\n                }\n            });\n        \n        // 获得属性的修饰符，主要用于判断\n        // 1、vclass 与 属性确切的类型是否匹配\n        // 2、是否为引用类型\n        // 3、被修改的属性是否加了volatile关键字\n        modifiers = field.getModifiers();\n        sun.reflect.misc.ReflectUtil.ensureMemberAccess(\n            caller, tclass, null, modifiers);\n        ClassLoader cl = tclass.getClassLoader();\n        ClassLoader ccl = caller.getClassLoader();\n        if ((ccl != null) && (ccl != cl) &&\n            ((cl == null) || !isAncestor(cl, ccl))) {\n            sun.reflect.misc.ReflectUtil.checkPackageAccess(tclass);\n        }\n        \n        // 获得属性类的Class\n        fieldClass = field.getType();\n    } catch (PrivilegedActionException pae) {\n        throw new RuntimeException(pae.getException());\n    } catch (Exception ex) {\n        throw new RuntimeException(ex);\n    }\n\n    if (vclass != fieldClass)\n        throw new ClassCastException();\n    if (vclass.isPrimitive())\n        throw new IllegalArgumentException("Must be reference type");\n\n    if (!Modifier.isVolatile(modifiers))\n        throw new IllegalArgumentException("Must be volatile type");\n\n    // Access to protected field members is restricted to receivers only\n    // of the accessing class, or one of its subclasses, and the\n    // accessing class must in turn be a subclass (or package sibling)\n    // of the protected member\'s defining class.\n    // If the updater refers to a protected field of a declaring class\n    // outside the current package, the receiver argument will be\n    // narrowed to the type of the accessing class.\n \t// 对类中的属性进行初始化\n    this.cclass = (Modifier.isProtected(modifiers) &&\n                   tclass.isAssignableFrom(caller) &&\n                   !isSamePackage(tclass, caller))\n                  ? caller : tclass;\n    this.tclass = tclass;\n    this.vclass = vclass;\n    // 获得偏移量\n    this.offset = U.objectFieldOffset(field);\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br")])]),t("p",[t("strong",[s._v("可以看出，原子引用更新器确实使用了反射")])]),s._v(" "),t("h2",{attrs:{id:"_8、longadder原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、longadder原理"}},[s._v("#")]),s._v(" 8、LongAdder原理")]),s._v(" "),t("h3",{attrs:{id:"原理之伪共享"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理之伪共享"}},[s._v("#")]),s._v(" 原理之伪共享")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150037.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150037.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("缓存行伪共享得从缓存说起\n缓存与内存的速度比较")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150051.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150051.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150102.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150102.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("因为 CPU 与 内存的速度差异很大，需要靠预读数据至"),t("strong",[s._v("缓存")]),s._v("来提升效率。\n而缓存以"),t("strong",[s._v("缓存行")]),s._v("为单位，每个缓存行对应着一块内存，一般是 "),t("strong",[s._v("64 byte")]),s._v("（8 个 long）\n缓存的加入会造成数据副本的产生，即同一份数据会缓存在不同核心的缓存行中\nCPU 要保证数据的"),t("strong",[s._v("一致性")]),s._v("，如果某个 CPU 核心"),t("strong",[s._v("更改")]),s._v("了数据，其它 CPU 核心对应的整个缓存行必须"),t("strong",[s._v("失效")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150111.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150111.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("因为 Cell 是数组形式，在内存中是连续存储的，一个 Cell 为 24 字节（16 字节的对象头和 8 字节的 value），因 此缓存行可以存下 2 个的 Cell 对象。这样问题来了：")]),s._v(" "),t("ul",[t("li",[s._v("Core-0 要修改 Cell[0]")]),s._v(" "),t("li",[s._v("Core-1 要修改 Cell[1]")])]),s._v(" "),t("p",[s._v("无论谁修改成功，都会导致对方 Core 的缓存行失效，")]),s._v(" "),t("p",[s._v("比如 Core-0 中 Cell[0]=6000, Cell[1]=8000 要累加 Cell[0]=6001, Cell[1]=8000 ，这时会让 Core-1 的缓存行失效")]),s._v(" "),t("p",[s._v("@sun.misc.Contended 用来解决这个问题，它的原理是在使用此注解的对象或字段的"),t("strong",[s._v("前后各增加 128 字节大小的 padding")]),s._v("（空白），从而让 CPU 将对象预读至缓存时"),t("strong",[s._v("占用不同的缓存行")]),s._v("，这样，不会造成对方缓存行的失效")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150119.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150119.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("累加主要调用以下方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public void add(long x) {\n       Cell[] as; long b, v; int m; Cell a;\n       if ((as = cells) != null || !casBase(b = base, b + x)) {\n           boolean uncontended = true;\n           if (as == null || (m = as.length - 1) < 0 ||\n               (a = as[getProbe() & m]) == null ||\n               !(uncontended = a.cas(v = a.value, v + x)))\n               longAccumulate(x, null, uncontended);\n       }\n   }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[t("strong",[s._v("累加流程图")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150129.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20200608150129.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_9、unsafe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、unsafe"}},[s._v("#")]),s._v(" 9、Unsafe")]),s._v(" "),t("p",[s._v("Unsafe 对象提供了非常底层的，操作内存、线程的方法，Unsafe 对象不能直接调用，只能通过"),t("strong",[s._v("反射")]),s._v("获得")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class GetUnsafe {\n\tpublic static void main(String[] args) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException, NoSuchFieldException {\n\t\t// 通过反射获得Unsafe对象\n\t\tClass unsafeClass = Unsafe.class;\n\t\t// 获得构造函数，Unsafe的构造函数为私有的\n\t\tConstructor constructor = unsafeClass.getDeclaredConstructor();\n\t\t// 设置为允许访问私有内容\n\t\tconstructor.setAccessible(true);\n\t\t// 创建Unsafe对象\n\t\tUnsafe unsafe = (Unsafe) constructor.newInstance();\n\t\t\n\t\t// 创建Person对象\n\t\tPerson person = new Person();\n\t\t// 获得其属性 name 的偏移量\n\t\tField field = Person.class.getDeclaredField("name");\n\t\tlong offset = unsafe.objectFieldOffset(field);\n\n\t\t// 通过unsafe的CAS操作改变值\n\t\tunsafe.compareAndSwapObject(person, offset, null, "Nyima");\n\t\tSystem.out.println(person);\n\t}\n}\n\nclass Person {\n    // 配合CAS操作，必须用volatile修饰\n \tvolatile String name;\n\n\n\t@Override\n\tpublic String toString() {\n\t\treturn "Person{" +\n\t\t\t\t"name=\'" + name + \'\\\'\' +\n\t\t\t\t\'}\';\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("h1",{attrs:{id:"六、共享模型之不可变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、共享模型之不可变"}},[s._v("#")]),s._v(" 六、共享模型之不可变")]),s._v(" "),t("h3",{attrs:{id:"_1、不可变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、不可变"}},[s._v("#")]),s._v(" 1、不可变")]),s._v(" "),t("p",[s._v("如果一个对象在"),t("strong",[s._v("不能够修")]),s._v("改其内部状态（属性），那么它就是线程安全的，因为不存在并发修改。")]),s._v(" "),t("h3",{attrs:{id:"_2、不可变设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、不可变设计"}},[s._v("#")]),s._v(" 2、不可变设计")]),s._v(" "),t("h4",{attrs:{id:"string类中不可变的体现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string类中不可变的体现"}},[s._v("#")]),s._v(" String类中不可变的体现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public final class String\n    implements java.io.Serializable, Comparable<String>, CharSequence {\n    /** The value is used for character storage. */\n    private final char value[];\n\n    /** Cache the hash code for the string */\n    private int hash; // Default to 0\n    \n   //....\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("em",[t("em",[s._v("ﬁnal 的使用 *")]),s._v("\n发现该类、类中所有属性都是 *"),t("em",[s._v("ﬁnal")])]),s._v(" 的")]),s._v(" "),t("ul",[t("li",[s._v("属性用 ﬁnal 修饰保证了该属性是只读的，不能修改")]),s._v(" "),t("li",[s._v("类用 ﬁnal 修饰保证了该类中的方法不能被覆盖，"),t("strong",[s._v("防止子类无意间破坏不可变性")])])]),s._v(" "),t("p",[s._v("**保护性拷贝 **")]),s._v(" "),t("p",[s._v("但有同学会说，使用字符串时，也有一些跟修改相关的方法啊，比如 substring 等，那么下面就看一看这些方法是 如何实现的，就以 substring 为例")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public String substring(int beginIndex) {\n        if (beginIndex < 0) {\n            throw new StringIndexOutOfBoundsException(beginIndex);\n        }\n        int subLen = value.length - beginIndex;\n        if (subLen < 0) {\n            throw new StringIndexOutOfBoundsException(subLen);\n        }\n    \t//返回的是一个新的对象\n        return (beginIndex == 0) ? this : new String(value, beginIndex, subLen);\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("发现其内部是调用 String 的构造方法"),t("strong",[s._v("创建了一个新字符串")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public String(char value[], int offset, int count) {\n        if (offset < 0) {\n            throw new StringIndexOutOfBoundsException(offset);\n        }\n        if (count <= 0) {\n            if (count < 0) {\n                throw new StringIndexOutOfBoundsException(count);\n            }\n            if (offset <= value.length) {\n                this.value = "".value;\n                return;\n            }\n        }\n        // Note: offset or count might be near -1>>>1.\n        if (offset > value.length - count) {\n            throw new StringIndexOutOfBoundsException(offset + count);\n        }\n        this.value = Arrays.OfRange(value, offset, offset+count);\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("构造新字符串对象时，会生成新的 char[] value，对内容进行复制 。这种通过创建副本对象来避免共享的手段称之为【"),t("strong",[s._v("保护性拷贝")]),s._v("（defensive ）】")]),s._v(" "),t("h1",{attrs:{id:"七、线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、线程池"}},[s._v("#")]),s._v(" 七、线程池")]),s._v(" "),t("h2",{attrs:{id:"_1、自定义线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、自定义线程池"}},[s._v("#")]),s._v(" 1、自定义线程池")]),s._v(" "),t("h3",{attrs:{id:"图解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图解"}},[s._v("#")]),s._v(" 图解")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201021154837.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201021154837.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("阻塞队列中维护了由主线程（或者其他线程）所产生的的任务")]),s._v(" "),t("li",[s._v("主线程类似于"),t("strong",[s._v("生产者")]),s._v("，产生任务并放入阻塞队列中")]),s._v(" "),t("li",[s._v("线程池类似于"),t("strong",[s._v("消费者")]),s._v("，得到阻塞队列中已有的任务并执行")])]),s._v(" "),t("h3",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[s._v("#")]),s._v(" 代码")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo3 {\n   public static void main(String[] args) {\n      ThreadPool threadPool = new ThreadPool(2,  TimeUnit.SECONDS, 1, 4);\n      for (int i = 0; i < 10; i++) {\n         threadPool.execute(()->{\n            try {\n               TimeUnit.SECONDS.sleep(10000);\n            } catch (InterruptedException e) {\n               e.printStackTrace();\n            }\n            System.out.println("任务正在执行!");\n         });\n      }\n   }\n}\n\n\n/**\n * 自定义线程池\n */\nclass ThreadPool {\n   /**\n    * 自定义阻塞队列\n    */\n   private BlockingQueue<Runnable> blockingQueue;\n\n   /**\n    * 核心线程数\n    */\n   private int coreSize;\n\n   private HashSet<Worker> workers = new HashSet<>();\n\n   /**\n    * 用于指定线程最大存活时间\n    */\n   private TimeUnit timeUnit;\n   private long timeout;\n\n   /**\n    * 工作线程类\n    * 内部封装了Thread类，并且添加了一些属性\n    */\n   private class Worker extends Thread {\n      Runnable task;\n\n      public Worker(Runnable task) {\n         System.out.println("初始化任务");\n         this.task = task;\n      }\n\n      @Override\n      public void run() {\n         // 如果有任务就执行\n         // 如果阻塞队列中有任务，就继续执行\n         while (task != null || (task = blockingQueue.take()) != null) {\n            try {\n               System.out.println("执行任务");\n               task.run();\n            } catch (Exception e) {\n               e.printStackTrace();\n            } finally {\n               // 任务执行完毕，设为空\n               System.out.println("任务执行完毕");\n               task = null;\n            }\n         }\n         // 移除任务\n         synchronized (workers) {\n            System.out.println("移除任务");\n            workers.remove(this);\n         }\n      }\n   }\n\n   public ThreadPool(int coreSize, TimeUnit timeUnit, long timeout, int capacity) {\n      this.coreSize = coreSize;\n      this.timeUnit = timeUnit;\n      blockingQueue = new BlockingQueue<>(capacity);\n      this.timeout = timeout;\n   }\n\n   public void execute(Runnable task) {\n      synchronized (workers) {\n         // 创建任务\n         // 池中还有空余线程时，可以运行任务\n         // 否则阻塞\n         if (workers.size() < coreSize) {\n            Worker worker = new Worker(task);\n            workers.add(worker);\n            worker.start();\n         } else {\n            System.out.println("线程池中线程已用完，请稍等");\n            blockingQueue.put(task);\n         }\n      }\n   }\n}\n\n/**\n * 阻塞队列\n * 用于存放主线程或其他线程产生的任务\n */\nclass BlockingQueue<T> {\n   /**\n    * 阻塞队列\n    */\n   private  Deque<T> blockingQueue;\n\n   /**\n    * 阻塞队列容量\n    */\n   private int capacity;\n\n   /**\n    * 锁\n    */\n   private ReentrantLock lock;\n\n   /**\n    * 条件队列\n    */\n   private Condition fullQueue;\n   private Condition emptyQueue;\n\n\n   public BlockingQueue(int capacity) {\n      blockingQueue = new ArrayDeque<>(capacity);\n      lock = new ReentrantLock();\n      fullQueue = lock.newCondition();\n      emptyQueue = lock.newCondition();\n      this.capacity = capacity;\n   }\n\n   /**\n    * 获取任务的方法\n    */\n   public T take() {\n      // 加锁\n      lock.lock();\n      try {\n         // 如果阻塞队列为空（没有任务），就一直等待\n         while (blockingQueue.isEmpty()) {\n            try {\n               emptyQueue.await();\n            } catch (InterruptedException e) {\n               e.printStackTrace();\n            }\n         }\n         // 获取任务并唤醒生产者线程\n         T task = blockingQueue.removeFirst();\n         fullQueue.signalAll();\n         return task;\n      } finally {\n         lock.unlock();\n      }\n   }\n\n   public T takeNanos(long timeout, TimeUnit unit) {\n      // 转换等待时间\n      lock.lock();\n      try {\n         long nanos = unit.toNanos(timeout);\n         while (blockingQueue.isEmpty()) {\n            try {\n               // awaitNanos会返回剩下的等待时间\n               nanos = emptyQueue.awaitNanos(nanos);\n               if (nanos < 0) {\n                  return null;\n               }\n            } catch (InterruptedException e) {\n               e.printStackTrace();\n            }\n         }\n         T task = blockingQueue.removeFirst();\n         fullQueue.signalAll();\n         return task;\n      } finally {\n         lock.unlock();\n      }\n   }\n\n   /**\n    * 放入任务的方法\n    * @param task 放入阻塞队列的任务\n    */\n   public void put(T task) {\n      lock.lock();\n      try {\n         while (blockingQueue.size() == capacity) {\n            try {\n               System.out.println("阻塞队列已满");\n               fullQueue.await();\n            } catch (InterruptedException e) {\n               e.printStackTrace();\n            }\n         }\n         blockingQueue.add(task);\n         // 唤醒等待的消费者\n         emptyQueue.signalAll();\n      } finally {\n         lock.unlock();\n      }\n   }\n\n   public int getSize() {\n      lock.lock();\n      try {\n         return blockingQueue.size();\n      } finally {\n         lock.unlock();\n      }\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br"),t("span",{staticClass:"line-number"},[s._v("172")]),t("br"),t("span",{staticClass:"line-number"},[s._v("173")]),t("br"),t("span",{staticClass:"line-number"},[s._v("174")]),t("br"),t("span",{staticClass:"line-number"},[s._v("175")]),t("br"),t("span",{staticClass:"line-number"},[s._v("176")]),t("br"),t("span",{staticClass:"line-number"},[s._v("177")]),t("br"),t("span",{staticClass:"line-number"},[s._v("178")]),t("br"),t("span",{staticClass:"line-number"},[s._v("179")]),t("br"),t("span",{staticClass:"line-number"},[s._v("180")]),t("br"),t("span",{staticClass:"line-number"},[s._v("181")]),t("br"),t("span",{staticClass:"line-number"},[s._v("182")]),t("br"),t("span",{staticClass:"line-number"},[s._v("183")]),t("br"),t("span",{staticClass:"line-number"},[s._v("184")]),t("br"),t("span",{staticClass:"line-number"},[s._v("185")]),t("br"),t("span",{staticClass:"line-number"},[s._v("186")]),t("br"),t("span",{staticClass:"line-number"},[s._v("187")]),t("br"),t("span",{staticClass:"line-number"},[s._v("188")]),t("br"),t("span",{staticClass:"line-number"},[s._v("189")]),t("br"),t("span",{staticClass:"line-number"},[s._v("190")]),t("br"),t("span",{staticClass:"line-number"},[s._v("191")]),t("br"),t("span",{staticClass:"line-number"},[s._v("192")]),t("br"),t("span",{staticClass:"line-number"},[s._v("193")]),t("br"),t("span",{staticClass:"line-number"},[s._v("194")]),t("br"),t("span",{staticClass:"line-number"},[s._v("195")]),t("br"),t("span",{staticClass:"line-number"},[s._v("196")]),t("br"),t("span",{staticClass:"line-number"},[s._v("197")]),t("br"),t("span",{staticClass:"line-number"},[s._v("198")]),t("br"),t("span",{staticClass:"line-number"},[s._v("199")]),t("br"),t("span",{staticClass:"line-number"},[s._v("200")]),t("br"),t("span",{staticClass:"line-number"},[s._v("201")]),t("br"),t("span",{staticClass:"line-number"},[s._v("202")]),t("br"),t("span",{staticClass:"line-number"},[s._v("203")]),t("br"),t("span",{staticClass:"line-number"},[s._v("204")]),t("br"),t("span",{staticClass:"line-number"},[s._v("205")]),t("br"),t("span",{staticClass:"line-number"},[s._v("206")]),t("br"),t("span",{staticClass:"line-number"},[s._v("207")]),t("br"),t("span",{staticClass:"line-number"},[s._v("208")]),t("br"),t("span",{staticClass:"line-number"},[s._v("209")]),t("br"),t("span",{staticClass:"line-number"},[s._v("210")]),t("br"),t("span",{staticClass:"line-number"},[s._v("211")]),t("br"),t("span",{staticClass:"line-number"},[s._v("212")]),t("br"),t("span",{staticClass:"line-number"},[s._v("213")]),t("br"),t("span",{staticClass:"line-number"},[s._v("214")]),t("br")])]),t("p",[s._v("实现了一个简单的线程池")]),s._v(" "),t("ul",[t("li",[s._v("阻塞队列BlockingQueue用于暂存来不及被线程执行的任务\n"),t("ul",[t("li",[s._v("也可以说是平衡生产者和消费者执行速度上的差异")]),s._v(" "),t("li",[s._v("里面的获取任务和放入任务用到了"),t("strong",[s._v("生产者消费者模式")])])])]),s._v(" "),t("li",[s._v("线程池中对线程Thread进行了再次的封装，封装为了Worker\n"),t("ul",[t("li",[s._v("在调用任务的run方法时，线程会去执行该任务，执行完毕后还会"),t("strong",[s._v("到阻塞队列中获取新任务来执行")])])])]),s._v(" "),t("li",[s._v("线程池中执行任务的主要方法为execute方法\n"),t("ul",[t("li",[s._v("执行时要判断正在执行的线程数是否大于了线程池容量")])])])]),s._v(" "),t("h2",{attrs:{id:"_2、threadpoolexecutor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、threadpoolexecutor"}},[s._v("#")]),s._v(" 2、ThreadPoolExecutor")]),s._v(" "),t("h3",{attrs:{id:"继承关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承关系"}},[s._v("#")]),s._v(" 继承关系")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201022212832.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201022212832.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"线程池状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程池状态"}},[s._v("#")]),s._v(" 线程池状态")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 线程池状态\n// runState is stored in the high-order bits\n// RUNNING 高3位为111\nprivate static final int RUNNING    = -1 << COUNT_BITS;\n\n// SHUTDOWN 高3位为000\nprivate static final int SHUTDOWN   =  0 << COUNT_BITS;\n\n// 高3位 001\nprivate static final int STOP       =  1 << COUNT_BITS;\n\n// 高3位 010\nprivate static final int TIDYING    =  2 << COUNT_BITS;\n\n// 高3位 011\nprivate static final int TERMINATED =  3 << COUNT_BITS;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("table",[t("thead",[t("tr",[t("th",[s._v("状态名称")]),s._v(" "),t("th",[s._v("高3位的值")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("RUNNING")]),s._v(" "),t("td",[s._v("111")]),s._v(" "),t("td",[s._v("接收新任务，同时处理任务队列中的任务")])]),s._v(" "),t("tr",[t("td",[s._v("SHUTDOWN")]),s._v(" "),t("td",[s._v("000")]),s._v(" "),t("td",[s._v("不接受新任务，但是处理任务队列中的任务")])]),s._v(" "),t("tr",[t("td",[s._v("STOP")]),s._v(" "),t("td",[s._v("001")]),s._v(" "),t("td",[s._v("中断正在执行的任务，同时抛弃阻塞队列中的任务")])]),s._v(" "),t("tr",[t("td",[s._v("TIDYING")]),s._v(" "),t("td",[s._v("010")]),s._v(" "),t("td",[s._v("任务执行完毕，活动线程为0时，即将进入终结阶段")])]),s._v(" "),t("tr",[t("td",[s._v("TERMINATED")]),s._v(" "),t("td",[s._v("011")]),s._v(" "),t("td",[s._v("终结状态")])])])]),s._v(" "),t("p",[s._v("线程池状态和线程池中线程的数量"),t("strong",[s._v("由一个原子整型ctl来共同表示")])]),s._v(" "),t("ul",[t("li",[s._v("使用一个数来表示两个值的主要原因是："),t("strong",[s._v("可以通过一次CAS同时更改两个属性的值")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 原子整数，前3位保存了线程池的状态，剩余位保存的是线程数量\nprivate final AtomicInteger ctl = new AtomicInteger(ctlOf(RUNNING, 0));\n\n// 并不是所有平台的int都是32位。\n// 去掉前三位保存线程状态的位数，剩下的用于保存线程数量\n// 高3位为0，剩余位数全为1\nprivate static final int COUNT_BITS = Integer.SIZE - 3;\n\n// 2^COUNT_BITS次方，表示可以保存的最大线程数\n// CAPACITY 的高3位为 0\nprivate static final int CAPACITY   = (1 << COUNT_BITS) - 1;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("获取线程池状态、线程数量以及合并两个值的操作")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// Packing and unpacking ctl\n// 获取运行状态\n// 该操作会让除高3位以外的数全部变为0\nprivate static int runStateOf(int c)     { return c & ~CAPACITY; }\n\n// 获取运行线程数\n// 该操作会让高3位为0\nprivate static int workerCountOf(int c)  { return c & CAPACITY; }\n\n// 计算ctl新值\nprivate static int ctlOf(int rs, int wc) { return rs | wc; }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"线程池属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程池属性"}},[s._v("#")]),s._v(" 线程池属性")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 工作线程，内部封装了Thread\nprivate final class Worker\n        extends AbstractQueuedSynchronizer\n        implements Runnable {\n    ...\n}\n\n// 阻塞队列，用于存放来不及被核心线程执行的任务\nprivate final BlockingQueue<Runnable> workQueue;\n\n// 锁\nprivate final ReentrantLock mainLock = new ReentrantLock();\n\n//  用于存放核心线程的容器，只有当持有锁时才能够获取其中的元素（核心线程）\nprivate final HashSet<Worker> workers = new HashSet<Worker>();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"构造方法极其参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造方法极其参数"}},[s._v("#")]),s._v(" 构造方法极其参数")]),s._v(" "),t("p",[t("strong",[s._v("ThreadPoolExecutor最全面的构造方法")])]),s._v(" "),t("p",[s._v("也是构造自定义线程池的方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public ThreadPoolExecutor(int corePoolSize,\n                          int maximumPoolSize,\n                          long keepAliveTime,\n                          TimeUnit unit,\n                          BlockingQueue<Runnable> workQueue,\n                          ThreadFactory threadFactory,\n                          RejectedExecutionHandler handler)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h4",{attrs:{id:"参数解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数解释"}},[s._v("#")]),s._v(" "),t("strong",[s._v("参数解释")])]),s._v(" "),t("ul",[t("li",[s._v("corePoolSize：核心线程数")]),s._v(" "),t("li",[s._v("maximumPoolSize：最大线程数\n"),t("ul",[t("li",[s._v("maximumPoolSize - corePoolSize = 救急线程数")])])]),s._v(" "),t("li",[s._v("keepAliveTime：救急线程空闲时的最大生存时间")]),s._v(" "),t("li",[s._v("unit：时间单位")]),s._v(" "),t("li",[s._v("workQueue：阻塞队列（存放任务）\n"),t("ul",[t("li",[s._v("有界阻塞队列 ArrayBlockingQueue")]),s._v(" "),t("li",[s._v("无界阻塞队列 LinkedBlockingQueue")]),s._v(" "),t("li",[s._v("最多只有一个同步元素的 SynchronousQueue")]),s._v(" "),t("li",[s._v("优先队列 PriorityBlockingQueue")])])]),s._v(" "),t("li",[s._v("threadFactory：线程工厂（给线程取名字）")]),s._v(" "),t("li",[s._v("handler：拒绝策略")])]),s._v(" "),t("h4",{attrs:{id:"工作方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作方式"}},[s._v("#")]),s._v(" 工作方式")]),s._v(" "),t("ul",[t("li",[s._v("当一个任务传给线程池以后，可能有以下几种可能\n"),t("ul",[t("li",[s._v("将任务分配给一个核心线程来执行")]),s._v(" "),t("li",[s._v("核心线程都在执行任务，将任务放到阻塞队列workQueue中等待被执行")]),s._v(" "),t("li",[s._v("阻塞队列满了，使用救急线程来执行任务\n"),t("ul",[t("li",[s._v("救急线程用完以后，超过生存时间（keepAliveTime）后会被释放")])])]),s._v(" "),t("li",[s._v("任务总数大于了 最大线程数（maximumPoolSize）与阻塞队列容量的最大值（workQueue.capacity），使用拒接策略")])])])]),s._v(" "),t("h4",{attrs:{id:"拒绝策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拒绝策略"}},[s._v("#")]),s._v(" 拒绝策略")]),s._v(" "),t("p",[s._v("如果线程到达 maximumPoolSize 仍然有新任务这时会执行"),t("strong",[s._v("拒绝策略")]),s._v("。拒绝策略 jdk 提供了 4 种实现")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201022194718.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://nyimapicture.oss-cn-beijing.aliyuncs.com/img/20201022194718.png",alt:"img"}}),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("AbortPolicy：让调用者抛出 RejectedExecutionException 异常，"),t("strong",[s._v("这是默认策略")])]),s._v(" "),t("li",[s._v("CallerRunsPolicy：让调用者运行任务")]),s._v(" "),t("li",[s._v("DiscardPolicy：放弃本次任务")]),s._v(" "),t("li",[s._v("DiscardOldestPolicy：放弃队列中最早的任务，本任务取而代之")])]),s._v(" "),t("h4",{attrs:{id:"使用-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-3"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class Demo1 {\n   static AtomicInteger threadId = new AtomicInteger(0);\n\n   public static void main(String[] args) {\n      // 手动创建线程池\n      // 创建有界阻塞队列\n      ArrayBlockingQueue<Runnable> runnable = new ArrayBlockingQueue<Runnable>(10);\n      // 创建线程工厂\n      ThreadFactory threadFactory = new ThreadFactory() {\n         @Override\n         public Thread newThread(Runnable r) {\n            Thread thread = new Thread(r, "working_thread_"+threadId.getAndIncrement());\n            return thread;\n         }\n      };\n\n      // 手动创建线程池\n      // 拒绝策略采用默认策略\n      ThreadPoolExecutor executor = new ThreadPoolExecutor(5, 7, 10, TimeUnit.SECONDS, runnable, threadFactory);\n\n      for (int i = 0; i < 20; i++) {\n         executor.execute(new Runnable() {\n            @Override\n            public void run() {\n               System.out.println(Thread.currentThread());\n               try {\n                  Thread.sleep(100000);\n               } catch (InterruptedException e) {\n                  e.printStackTrace();\n               }\n            }\n         });\n      }\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("h3",{attrs:{id:"fixedthreadpool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fixedthreadpool"}},[s._v("#")]),s._v(" FixedThreadPool")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('public class TestFixedThreadPool {\n   public static void main(String[] args) {\n      // 自定义线程工厂\n      ThreadFactory factory = new ThreadFactory() {\n         AtomicInteger atomicInteger = new AtomicInteger(1);\n\n         @Override\n         public Thread newThread(Runnable r) {\n            return new Thread(r, "myThread_" + atomicInteger.getAndIncrement());\n         }\n      };\n\n      // 创建核心线程数量为2的线程池\n      // 通过 ThreadFactory可以给线程添加名字\n\n      ExecutorService executorService = Executors.newFixedThreadPool(2, factory);\n\n      // 任务\n      Runnable runnable = new Runnable() {\n         @Override\n         public void run() {\n            System.out.println(Thread.currentThread().getName());\n            System.out.println("this is fixedThreadPool");\n         }\n      };\n      \n      executorService.execute(runnable);\n   }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[s._v("固定大小的线程池可以传入两个参数")]),s._v(" "),t("ul",[t("li",[s._v("核心线程数：nThreads")]),s._v(" "),t("li",[s._v("线程工厂：threadFactory")])]),s._v(" "),t("p",[s._v("内部调用的构造方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ThreadPoolExecutor(nThreads, nThreads,\n                              0L, TimeUnit.MILLISECONDS,\n                              new LinkedBlockingQueue<Runnable>(),\n                              threadFactory);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"cachedthreadpool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cachedthreadpool"}},[s._v("#")]),s._v(" CachedThreadPool")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ExecutorService executorService = Executors.newCachedThreadPool();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("内部构造方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                              60L, TimeUnit.SECONDS,\n                              new SynchronousQueue<Runnable>());\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("没有核心线程，最大线程数为Integer.MAX_VALUE，"),t("strong",[s._v("所有创建的线程都是救急线程")]),s._v("，空闲时生存时间为60秒")])]),s._v(" "),t("li",[t("p",[s._v("阻塞队列使用的是SynchronousQueue")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("SynchronousQueue")]),s._v(" "),t("p",[s._v("是一种特殊的队列")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("没有容量")]),s._v("，没有线程来取是放不进去的")]),s._v(" "),t("li",[s._v("只有当线程取任务时，才会将任务放入该阻塞队列中")])])])])])]),s._v(" "),t("h3",{attrs:{id:"singlethread"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#singlethread"}},[s._v("#")]),s._v(" SingleThread")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ExecutorService service = Executors.newSingleThreadExecutor();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("内部构造方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("new FinalizableDelegatedExecutorService\n    (new ThreadPoolExecutor(1, 1,\n                            0L, TimeUnit.MILLISECONDS,\n                            new LinkedBlockingQueue<Runnable>()));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("内部调用了"),t("strong",[s._v("new ThreadPoolExecutor")]),s._v("的构造方法，传入的corePoolSize和maximumPoolSize都为1。然后将该对象传给了FinalizableDelegatedExecutorService。该类修饰了ThreadPoolExecutor，让外部无法调用ThreadPoolExecutor内部的某些方法来修改所创建的线程池的大小。")]),s._v(" "),t("h4",{attrs:{id:"几个注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#几个注意"}},[s._v("#")]),s._v(" 几个注意")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("SingleThread和自己创建一个线程来运行多个任务的区别")]),s._v(" "),t("ul",[t("li",[s._v("当线程正在执行的任务发生错误时，如果是自己创建的线程，该任务和剩余的任务就无法再继续运行下去。而SingleThread会创建一个新线程，继续执行任务队列中剩余的任务。")])])]),s._v(" "),t("li",[t("p",[s._v("SingleThread和newFixedThreadPool(1)的区别")]),s._v(" "),t("ul",[t("li",[s._v("newFixedThreadPool(1)传值为1，可以将FixedThreadPool强转为ThreadPoolExecutor，然后通过setCorePoolSize改变核心线程数")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 强转为ThreadPoolExecutor\nThreadPoolExecutor threadPool = (ThreadPoolExecutor) Executors.newFixedThreadPool(1);\n// 改变核心线程数\nthreadPool.setCorePoolSize(2);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("而SingleThread无法修改核心线程数")])])])]),s._v(" "),t("h3",{attrs:{id:"执行任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行任务"}},[s._v("#")]),s._v(" 执行任务")]),s._v(" "),t("h4",{attrs:{id:"execute-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#execute-方法"}},[s._v("#")]),s._v(" execute()方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("execute(Runnable command)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("传入一个Runnable对象，执行其中的run方法")]),s._v(" "),t("p",[t("strong",[s._v("源码解析")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public void execute(Runnable command) {\n    if (command == null)\n        throw new NullPointerException();\n\n    // 获取ctl\n    int c = ctl.get();\n    \n    // 判断当前启用的线程数是否小于核心线程数\n    if (workerCountOf(c) < corePoolSize) {\n        // 为该任务分配线程\n        if (addWorker(command, true))\n            // 分配成功就返回\n            return;\n        \n        // 分配失败再次获取ctl\n        c = ctl.get();\n    }\n    \n    // 分配和信息线程失败以后\n    // 如果池状态为RUNNING并且插入到任务队列成功\n    if (isRunning(c) && workQueue.offer(command)) {\n        \n        // 双重检测，可能在添加后线程池状态变为了非RUNNING\n        int recheck = ctl.get();\n        \n        // 如果池状态为非RUNNING，则不会执行新来的任务\n        // 将该任务从阻塞队列中移除\n        if (! isRunning(recheck) && remove(command))\n            // 调用拒绝策略，拒绝该任务的执行\n            reject(command);\n        \n        // 如果没有正在运行的线程\n        else if (workerCountOf(recheck) == 0)\n            // 就创建新线程来执行该任务\n            addWorker(null, false);\n    }\n    \n    // 如果添加失败了（任务队列已满），就调用拒绝策略\n    else if (!addWorker(command, false))\n        reject(command);\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br")])]),t("p",[s._v("其中调用了**addWoker()**方法，再看看看这个方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("private boolean addWorker(Runnable firstTask, boolean core) {\n    retry:\n    for (;;) {\n        int c = ctl.get();\n        int rs = runStateOf(c);\n\n        // Check if queue empty only if necessary.\n        // 如果池状态为非RUNNING状态、线程池为SHUTDOWN且该任务为空 或者阻塞队列中已经有任务\n        if (rs >= SHUTDOWN &&\n            ! (rs == SHUTDOWN &&\n               firstTask == null &&\n               ! workQueue.isEmpty()))\n            // 创建新线程失败\n            return false;\n\n        for (;;) {\n            // 获得当前工作线程数\n            int wc = workerCountOf(c);\n\n            // 参数中 core 为true\n            // CAPACITY 为 1 << COUNT_BITS-1，一般不会超过\n            // 如果工作线程数大于了核心线程数，则创建失败\n            if (wc >= CAPACITY ||\n                wc >= (core ? corePoolSize : maximumPoolSize))\n                return false;\n            // 通过CAS操作改变c的值\n            if (compareAndIncrementWorkerCount(c))\n                // 更改成功就跳出多重循环，且不再运行循环\n                break retry;\n            // 更改失败，重新获取ctl的值\n            c = ctl.get();  // Re-read ctl\n            if (runStateOf(c) != rs)\n                // 跳出多重循环，且重新进入循环\n                continue retry;\n            // else CAS failed due to workerCount change; retry inner loop\n        }\n    }\n\n    // 用于标记work中的任务是否成功执行\n    boolean workerStarted = false;\n    // 用于标记worker是否成功加入了线程池中\n    boolean workerAdded = false;\n    Worker w = null;\n    try {\n        // 创建新线程来执行任务\n        w = new Worker(firstTask);\n        final Thread t = w.thread;\n        if (t != null) {\n            final ReentrantLock mainLock = this.mainLock;\n            // 加锁\n            mainLock.lock();\n            try {\n                // Recheck while holding lock.\n                // Back out on ThreadFactory failure or if\n                // shut down before lock acquired.\n                // 加锁的同时再次检测\n                // 避免在释放锁之前调用了shut down\n                int rs = runStateOf(ctl.get());\n\n                if (rs < SHUTDOWN ||\n                    (rs == SHUTDOWN && firstTask == null)) {\n                    if (t.isAlive()) // precheck that t is startable\n                        throw new IllegalThreadStateException();\n                    // 将线程添加到线程池中\n                    workers.add(w);\n                    int s = workers.size();\n                    if (s > largestPoolSize)\n                        largestPoolSize = s;\n                    // 添加成功标志位变为true\n                    workerAdded = true;\n                }\n            } finally {\n                mainLock.unlock();\n            }\n            // 如果worker成功加入了线程池，就执行其中的任务\n            if (workerAdded) {\n                t.start();\n                // 启动成功\n                workerStarted = true;\n            }\n        }\n    } finally {\n        // 如果执行失败\n        if (! workerStarted)\n            // 调用添加失败的函数\n            addWorkerFailed(w);\n    }\n    return workerStarted;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br")])]),t("h4",{attrs:{id:"submit-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#submit-方法"}},[s._v("#")]),s._v(" submit()方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Future<T> submit(Callable<T> task)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("传入一个Callable对象，用Future来"),t("strong",[s._v("捕获返回值")])]),s._v(" "),t("p",[t("strong",[s._v("使用")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 通过submit执行Callable中的call方法\n// 通过Future来捕获返回值\nFuture<String> future = threadPool.submit(new Callable<String>() {\n   @Override\n   public String call() throws Exception {\n      return "hello submit";\n   }\n});\n\n// 查看捕获的返回值\nSystem.out.println(future.get());\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"停止"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#停止"}},[s._v("#")]),s._v(" 停止")]),s._v(" "),t("h4",{attrs:{id:"shutdown"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shutdown"}},[s._v("#")]),s._v(" shutdown()")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/**\n* 将线程池的状态改为 SHUTDOWN\n* 不再接受新任务，但是会将阻塞队列中的任务执行完\n*/\npublic void shutdown() {\n    final ReentrantLock mainLock = this.mainLock;\n    mainLock.lock();\n    try {\n        checkShutdownAccess();\n        \n        // 修改线程池状态为 SHUTDOWN\n        advanceRunState(SHUTDOWN);\n        \n  \t\t// 中断空闲线程（没有执行任务的线程）\n        // Idle：空闲的\n        interruptIdleWorkers();\n        onShutdown(); // hook for ScheduledThreadPoolExecutor\n    } finally {\n        mainLock.unlock();\n    }\n    // 尝试终结，不一定成功\n    // \n    tryTerminate();\n}\nfinal void tryTerminate() {\n    for (;;) {\n        int c = ctl.get();\n        // 终结失败的条件\n        // 线程池状态为RUNNING\n        // 线程池状态为 RUNNING SHUTDOWN STOP （状态值大于TIDYING）\n        // 线程池状态为SHUTDOWN，但阻塞队列中还有任务等待执行\n        if (isRunning(c) ||\n            runStateAtLeast(c, TIDYING) ||\n            (runStateOf(c) == SHUTDOWN && ! workQueue.isEmpty()))\n            return;\n        \n        // 如果活跃线程数不为0\n        if (workerCountOf(c) != 0) { // Eligible to terminate\n            // 中断空闲线程\n            interruptIdleWorkers(ONLY_ONE);\n            return;\n        }\n\n        final ReentrantLock mainLock = this.mainLock;\n        mainLock.lock();\n        try {\n            // 处于可以终结的状态\n            // 通过CAS将线程池状态改为TIDYING\n            if (ctl.compareAndSet(c, ctlOf(TIDYING, 0))) {\n                try {\n                    terminated();\n                } finally {\n                    // 通过CAS将线程池状态改为TERMINATED\n                    ctl.set(ctlOf(TERMINATED, 0));\n                    termination.signalAll();\n                }\n                return;\n            }\n        } finally {\n            mainLock.unlock();\n        }\n        // else retry on failed CAS\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br")])]),t("h4",{attrs:{id:"shutdownnow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shutdownnow"}},[s._v("#")]),s._v(" shutdownNow()")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/**\n* 将线程池的状态改为 STOP\n* 不再接受新任务，也不会在执行阻塞队列中的任务\n* 会将阻塞队列中未执行的任务返回给调用者\n*/\npublic List<Runnable> shutdownNow() {\n    List<Runnable> tasks;\n    final ReentrantLock mainLock = this.mainLock;\n    mainLock.lock();\n    try {\n        checkShutdownAccess();\n        \n        // 修改状态为STOP，不执行任何任务\n        advanceRunState(STOP);\n        \n        // 中断所有线程\n        interruptWorkers();\n        \n        // 将未执行的任务从队列中移除，然后返回给调用者\n        tasks = drainQueue();\n    } finally {\n        mainLock.unlock();\n    }\n    // 尝试终结，一定会成功，因为阻塞队列为空了\n    tryTerminate();\n    return tasks;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);